{"version":3,"file":"content.js","mappings":";;;;AAAA;AACA;AACA;AACA;;AAEA;AACA,IAAMA,UAAU,GAAGC,QAAQ,CAACC,QAAQ,CAACC,IAAI,CAACC,QAAQ,CAAC,eAAe,CAAC,IAChDH,QAAQ,CAACC,QAAQ,CAACC,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAC;;AAE1D;AACAH,QAAQ,CAACI,gBAAgB,CAAC,kBAAkB,EAAE,YAAM;EAClD,IAAIL,UAAU,EAAE;IACdM,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAC;IAC9DC,yBAAyB,CAAC,CAAC;EAC7B;AACF,CAAC,CAAC;;AAEF;AACA,SAASA,yBAAyBA,CAAA,EAAG;EACnC;EACA,IAAMC,QAAQ,GAAGC,eAAe,CAAC,CAAC;EAClC,IAAID,QAAQ,EAAE;IACZ;IACAE,MAAM,CAACC,OAAO,CAACC,WAAW,CAAC;MACzBC,IAAI,EAAE,cAAc;MACpBC,IAAI,EAAE;QACJN,QAAQ,EAAEA,QAAQ;QAClBO,QAAQ,EAAEC,MAAM,CAACf,QAAQ,CAACC,IAAI;QAC9Be,SAAS,EAAEjB,QAAQ,CAACkB;MACtB;IACF,CAAC,CAAC;EACJ;;EAEA;EACAC,gBAAgB,CAAC,CAAC;AACpB;;AAEA;AACA,SAASV,eAAeA,CAAA,EAAG;EACzB;EACA,IAAMW,QAAQ,GAAGJ,MAAM,CAACf,QAAQ,CAACC,IAAI,CAACmB,KAAK,CAAC,YAAY,CAAC;EACzD,IAAID,QAAQ,EAAE,OAAOA,QAAQ,CAAC,CAAC,CAAC;;EAEhC;EACA,IAAME,UAAU,GAAGtB,QAAQ,CAACkB,KAAK,CAACG,KAAK,CAAC,YAAY,CAAC;EACrD,IAAIC,UAAU,EAAE,OAAOA,UAAU,CAAC,CAAC,CAAC;;EAEpC;EACA,IAAMC,gBAAgB,GAAGvB,QAAQ,CAACwB,gBAAgB,CAAC,kBAAkB,CAAC;EACtE,IAAID,gBAAgB,CAACE,MAAM,GAAG,CAAC,EAAE;IAC/B,OAAOF,gBAAgB,CAAC,CAAC,CAAC,CAACG,YAAY,CAAC,gBAAgB,CAAC;EAC3D;EAEA,OAAO,IAAI;AACb;;AAEA;AACA,SAASP,gBAAgBA,CAAA,EAAG;EAC1B;EACA,IAAInB,QAAQ,CAAC2B,cAAc,CAAC,0BAA0B,CAAC,EAAE;;EAEzD;EACA,IAAMC,MAAM,GAAG5B,QAAQ,CAAC6B,aAAa,CAAC,QAAQ,CAAC;EAC/CD,MAAM,CAACE,EAAE,GAAG,0BAA0B;EACtCF,MAAM,CAACG,SAAS,GAAG,cAAc;EACjCH,MAAM,CAACI,KAAK,CAACC,OAAO,0SAanB;;EAED;EACAL,MAAM,CAACxB,gBAAgB,CAAC,OAAO,EAAE,YAAM;IACrCM,MAAM,CAACC,OAAO,CAACC,WAAW,CAAC;MAAEC,IAAI,EAAE;IAAa,CAAC,CAAC;EACpD,CAAC,CAAC;;EAEF;EACAb,QAAQ,CAACkC,IAAI,CAACC,WAAW,CAACP,MAAM,CAAC;AACnC;;AAEA;AACAlB,MAAM,CAACC,OAAO,CAACyB,SAAS,CAACC,WAAW,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAEC,YAAY,EAAK;EACtE,IAAIF,OAAO,CAACzB,IAAI,KAAK,kBAAkB,EAAE;IACvC,IAAML,QAAQ,GAAGC,eAAe,CAAC,CAAC;IAClC+B,YAAY,CAAC;MACXhC,QAAQ,EAAEA,QAAQ;MAClBO,QAAQ,EAAEC,MAAM,CAACf,QAAQ,CAACC,IAAI;MAC9Be,SAAS,EAAEjB,QAAQ,CAACkB,KAAK;MACzBnB,UAAU,EAAEA;IACd,CAAC,CAAC;IACF,OAAO,IAAI;EACb;AACF,CAAC,CAAC,C","sources":["webpack://jira-action-items-chatbot/./content/contentScript.js"],"sourcesContent":["/**\r\n * Content script for the Jira Action Items Chatbot extension\r\n * This runs in the context of web pages to detect Jira content\r\n */\r\n\r\n// Check if we're on a Jira page\r\nconst isJiraPage = document.location.href.includes('atlassian.net') || \r\n                   document.location.href.includes('jira');\r\n\r\n// Initialize when the DOM is fully loaded\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  if (isJiraPage) {\r\n    console.log('Jira page detected, initializing content script');\r\n    initializeJiraIntegration();\r\n  }\r\n});\r\n\r\n// Initialize Jira specific functionality\r\nfunction initializeJiraIntegration() {\r\n  // Try to extract issue information if on a specific issue page\r\n  const issueKey = extractIssueKey();\r\n  if (issueKey) {\r\n    // Notify the background script about the current issue\r\n    chrome.runtime.sendMessage({\r\n      type: 'JIRA_CONTEXT',\r\n      data: {\r\n        issueKey: issueKey,\r\n        issueUrl: window.location.href,\r\n        pageTitle: document.title\r\n      }\r\n    });\r\n  }\r\n\r\n  // Add sidebar button if needed\r\n  addSidebarButton();\r\n}\r\n\r\n// Extract Jira issue key from the page (e.g., \"PROJ-123\")\r\nfunction extractIssueKey() {\r\n  // Try to find the issue key in the URL\r\n  const urlMatch = window.location.href.match(/[A-Z]+-\\d+/);\r\n  if (urlMatch) return urlMatch[0];\r\n  \r\n  // Try to find it in the page title\r\n  const titleMatch = document.title.match(/[A-Z]+-\\d+/);\r\n  if (titleMatch) return titleMatch[0];\r\n  \r\n  // Try to find it in specific page elements\r\n  const issueKeyElements = document.querySelectorAll('[data-issue-key]');\r\n  if (issueKeyElements.length > 0) {\r\n    return issueKeyElements[0].getAttribute('data-issue-key');\r\n  }\r\n  \r\n  return null;\r\n}\r\n\r\n// Add a button to open our sidebar\r\nfunction addSidebarButton() {\r\n  // Check if our button already exists\r\n  if (document.getElementById('jira-action-items-button')) return;\r\n  \r\n  // Create button element\r\n  const button = document.createElement('button');\r\n  button.id = 'jira-action-items-button';\r\n  button.innerText = 'Action Items';\r\n  button.style.cssText = `\r\n    position: fixed;\r\n    right: 20px;\r\n    top: 100px;\r\n    z-index: 9999;\r\n    background-color: #0052CC;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 3px;\r\n    padding: 8px 12px;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n  `;\r\n  \r\n  // Add click event to open extension popup\r\n  button.addEventListener('click', () => {\r\n    chrome.runtime.sendMessage({ type: 'OPEN_POPUP' });\r\n  });\r\n  \r\n  // Add to page\r\n  document.body.appendChild(button);\r\n}\r\n\r\n// Listen for messages from the background script or popup\r\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\r\n  if (message.type === 'GET_JIRA_CONTEXT') {\r\n    const issueKey = extractIssueKey();\r\n    sendResponse({\r\n      issueKey: issueKey,\r\n      issueUrl: window.location.href,\r\n      pageTitle: document.title,\r\n      isJiraPage: isJiraPage\r\n    });\r\n    return true;\r\n  }\r\n}); "],"names":["isJiraPage","document","location","href","includes","addEventListener","console","log","initializeJiraIntegration","issueKey","extractIssueKey","chrome","runtime","sendMessage","type","data","issueUrl","window","pageTitle","title","addSidebarButton","urlMatch","match","titleMatch","issueKeyElements","querySelectorAll","length","getAttribute","getElementById","button","createElement","id","innerText","style","cssText","body","appendChild","onMessage","addListener","message","sender","sendResponse"],"sourceRoot":""}