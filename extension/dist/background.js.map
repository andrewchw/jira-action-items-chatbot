{"version":3,"file":"background.js","mappings":";;;;;+CACA,mKAAAA,mBAAA,YAAAA,oBAAA,WAAAC,CAAA,SAAAC,CAAA,EAAAD,CAAA,OAAAE,CAAA,GAAAC,MAAA,CAAAC,SAAA,EAAAC,CAAA,GAAAH,CAAA,CAAAI,cAAA,EAAAC,CAAA,wBAAAC,MAAA,GAAAA,MAAA,OAAAC,CAAA,GAAAF,CAAA,CAAAG,QAAA,kBAAAC,CAAA,GAAAJ,CAAA,CAAAK,aAAA,uBAAAC,CAAA,GAAAN,CAAA,CAAAO,WAAA,8BAAAC,EAAAd,CAAA,EAAAD,CAAA,EAAAE,CAAA,EAAAG,CAAA,WAAAF,MAAA,CAAAa,cAAA,CAAAf,CAAA,EAAAD,CAAA,IAAAiB,KAAA,EAAAf,CAAA,EAAAgB,UAAA,GAAAb,CAAA,EAAAc,YAAA,GAAAd,CAAA,EAAAe,QAAA,GAAAf,CAAA,aAAAU,CAAA,mBAAAd,CAAA,IAAAc,CAAA,YAAAA,EAAAd,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,gBAAAmB,EAAArB,CAAA,EAAAE,CAAA,EAAAG,CAAA,EAAAE,CAAA,QAAAE,CAAA,GAAAP,CAAA,IAAAA,CAAA,CAAAE,SAAA,YAAAkB,SAAA,GAAApB,CAAA,GAAAoB,SAAA,EAAAX,CAAA,GAAAR,MAAA,CAAAoB,MAAA,CAAAd,CAAA,CAAAL,SAAA,UAAAW,CAAA,CAAAJ,CAAA,uBAAAX,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAE,CAAA,uBAAAE,CAAA,EAAAE,CAAA,cAAAJ,CAAA,QAAAiB,KAAA,4CAAAjB,CAAA,oBAAAE,CAAA,QAAAE,CAAA,WAAAM,KAAA,EAAAhB,CAAA,EAAAwB,IAAA,eAAApB,CAAA,CAAAqB,MAAA,GAAAjB,CAAA,EAAAJ,CAAA,CAAAsB,GAAA,GAAAhB,CAAA,UAAAE,CAAA,GAAAR,CAAA,CAAAuB,QAAA,MAAAf,CAAA,QAAAE,CAAA,GAAAc,CAAA,CAAAhB,CAAA,EAAAR,CAAA,OAAAU,CAAA,QAAAA,CAAA,KAAAe,CAAA,mBAAAf,CAAA,qBAAAV,CAAA,CAAAqB,MAAA,EAAArB,CAAA,CAAA0B,IAAA,GAAA1B,CAAA,CAAA2B,KAAA,GAAA3B,CAAA,CAAAsB,GAAA,sBAAAtB,CAAA,CAAAqB,MAAA,cAAAnB,CAAA,QAAAA,CAAA,MAAAF,CAAA,CAAAsB,GAAA,EAAAtB,CAAA,CAAA4B,iBAAA,CAAA5B,CAAA,CAAAsB,GAAA,uBAAAtB,CAAA,CAAAqB,MAAA,IAAArB,CAAA,CAAA6B,MAAA,WAAA7B,CAAA,CAAAsB,GAAA,GAAApB,CAAA,UAAAc,CAAA,GAAAc,CAAA,CAAAnC,CAAA,EAAAE,CAAA,EAAAG,CAAA,oBAAAgB,CAAA,CAAAe,IAAA,QAAA7B,CAAA,GAAAF,CAAA,CAAAoB,IAAA,UAAAJ,CAAA,CAAAM,GAAA,KAAAG,CAAA,qBAAAb,KAAA,EAAAI,CAAA,CAAAM,GAAA,EAAAF,IAAA,EAAApB,CAAA,CAAAoB,IAAA,kBAAAJ,CAAA,CAAAe,IAAA,KAAA7B,CAAA,MAAAF,CAAA,CAAAqB,MAAA,YAAArB,CAAA,CAAAsB,GAAA,GAAAN,CAAA,CAAAM,GAAA,UAAA3B,CAAA,EAAAK,CAAA,MAAAgC,OAAA,CAAA9B,CAAA,eAAAI,CAAA,aAAAwB,EAAAlC,CAAA,EAAAD,CAAA,EAAAE,CAAA,mBAAAkC,IAAA,YAAAT,GAAA,EAAA1B,CAAA,CAAAqC,IAAA,CAAAtC,CAAA,EAAAE,CAAA,cAAAD,CAAA,aAAAmC,IAAA,WAAAT,GAAA,EAAA1B,CAAA,QAAAD,CAAA,CAAAuC,IAAA,GAAAlB,CAAA,MAAAS,CAAA,gBAAAR,UAAA,cAAAkB,kBAAA,cAAAC,2BAAA,SAAAC,CAAA,OAAA3B,CAAA,CAAA2B,CAAA,EAAAjC,CAAA,qCAAAkC,CAAA,GAAAxC,MAAA,CAAAyC,cAAA,EAAAC,CAAA,GAAAF,CAAA,IAAAA,CAAA,CAAAA,CAAA,CAAAG,CAAA,QAAAD,CAAA,IAAAA,CAAA,KAAA3C,CAAA,IAAAG,CAAA,CAAAiC,IAAA,CAAAO,CAAA,EAAApC,CAAA,MAAAiC,CAAA,GAAAG,CAAA,OAAAE,CAAA,GAAAN,0BAAA,CAAArC,SAAA,GAAAkB,SAAA,CAAAlB,SAAA,GAAAD,MAAA,CAAAoB,MAAA,CAAAmB,CAAA,YAAAM,EAAA/C,CAAA,gCAAAgD,OAAA,WAAAjD,CAAA,IAAAe,CAAA,CAAAd,CAAA,EAAAD,CAAA,YAAAC,CAAA,gBAAAiD,OAAA,CAAAlD,CAAA,EAAAC,CAAA,sBAAAkD,cAAAlD,CAAA,EAAAD,CAAA,aAAAE,EAAAK,CAAA,EAAAE,CAAA,EAAAE,CAAA,EAAAE,CAAA,QAAAE,CAAA,GAAAoB,CAAA,CAAAlC,CAAA,CAAAM,CAAA,GAAAN,CAAA,EAAAQ,CAAA,mBAAAM,CAAA,CAAAqB,IAAA,QAAAf,CAAA,GAAAN,CAAA,CAAAY,GAAA,EAAAG,CAAA,GAAAT,CAAA,CAAAJ,KAAA,SAAAa,CAAA,gBAAAsB,OAAA,CAAAtB,CAAA,KAAAzB,CAAA,CAAAiC,IAAA,CAAAR,CAAA,eAAA9B,CAAA,CAAAqD,OAAA,CAAAvB,CAAA,CAAAwB,OAAA,EAAAC,IAAA,WAAAtD,CAAA,IAAAC,CAAA,SAAAD,CAAA,EAAAU,CAAA,EAAAE,CAAA,gBAAAZ,CAAA,IAAAC,CAAA,UAAAD,CAAA,EAAAU,CAAA,EAAAE,CAAA,QAAAb,CAAA,CAAAqD,OAAA,CAAAvB,CAAA,EAAAyB,IAAA,WAAAtD,CAAA,IAAAoB,CAAA,CAAAJ,KAAA,GAAAhB,CAAA,EAAAU,CAAA,CAAAU,CAAA,gBAAApB,CAAA,WAAAC,CAAA,UAAAD,CAAA,EAAAU,CAAA,EAAAE,CAAA,SAAAA,CAAA,CAAAE,CAAA,CAAAY,GAAA,SAAApB,CAAA,EAAAQ,CAAA,4BAAAd,CAAA,EAAAI,CAAA,aAAAI,EAAA,eAAAT,CAAA,WAAAA,CAAA,EAAAO,CAAA,IAAAL,CAAA,CAAAD,CAAA,EAAAI,CAAA,EAAAL,CAAA,EAAAO,CAAA,gBAAAA,CAAA,GAAAA,CAAA,GAAAA,CAAA,CAAAgD,IAAA,CAAA9C,CAAA,EAAAA,CAAA,IAAAA,CAAA,uBAAAoB,EAAA7B,CAAA,EAAAE,CAAA,QAAAG,CAAA,GAAAH,CAAA,CAAAwB,MAAA,EAAAnB,CAAA,GAAAP,CAAA,CAAAS,CAAA,CAAAJ,CAAA,OAAAE,CAAA,KAAAN,CAAA,SAAAC,CAAA,CAAA0B,QAAA,qBAAAvB,CAAA,IAAAL,CAAA,CAAAS,CAAA,eAAAP,CAAA,CAAAwB,MAAA,aAAAxB,CAAA,CAAAyB,GAAA,GAAA1B,CAAA,EAAA4B,CAAA,CAAA7B,CAAA,EAAAE,CAAA,eAAAA,CAAA,CAAAwB,MAAA,kBAAArB,CAAA,KAAAH,CAAA,CAAAwB,MAAA,YAAAxB,CAAA,CAAAyB,GAAA,OAAA6B,SAAA,uCAAAnD,CAAA,iBAAAyB,CAAA,MAAArB,CAAA,GAAA0B,CAAA,CAAA5B,CAAA,EAAAP,CAAA,CAAAS,CAAA,EAAAP,CAAA,CAAAyB,GAAA,mBAAAlB,CAAA,CAAA2B,IAAA,SAAAlC,CAAA,CAAAwB,MAAA,YAAAxB,CAAA,CAAAyB,GAAA,GAAAlB,CAAA,CAAAkB,GAAA,EAAAzB,CAAA,CAAA0B,QAAA,SAAAE,CAAA,MAAAnB,CAAA,GAAAF,CAAA,CAAAkB,GAAA,SAAAhB,CAAA,GAAAA,CAAA,CAAAc,IAAA,IAAAvB,CAAA,CAAAF,CAAA,CAAAA,CAAA,IAAAW,CAAA,CAAAM,KAAA,EAAAf,CAAA,CAAAuD,IAAA,GAAAzD,CAAA,CAAAK,CAAA,eAAAH,CAAA,CAAAwB,MAAA,KAAAxB,CAAA,CAAAwB,MAAA,WAAAxB,CAAA,CAAAyB,GAAA,GAAA1B,CAAA,GAAAC,CAAA,CAAA0B,QAAA,SAAAE,CAAA,IAAAnB,CAAA,IAAAT,CAAA,CAAAwB,MAAA,YAAAxB,CAAA,CAAAyB,GAAA,OAAA6B,SAAA,sCAAAtD,CAAA,CAAA0B,QAAA,SAAAE,CAAA,cAAA4B,EAAAzD,CAAA,SAAA0D,UAAA,CAAAC,IAAA,CAAA3D,CAAA,cAAA4D,EAAA7D,CAAA,QAAAE,CAAA,GAAAF,CAAA,WAAAE,CAAA,CAAAkC,IAAA,aAAAlC,CAAA,CAAAyB,GAAA,GAAA1B,CAAA,EAAAD,CAAA,MAAAE,CAAA,aAAAmC,QAAApC,CAAA,SAAA0D,UAAA,WAAA1D,CAAA,CAAAgD,OAAA,CAAAS,CAAA,cAAAI,KAAA,iBAAAhB,EAAA9C,CAAA,gBAAAA,CAAA,QAAAE,CAAA,GAAAF,CAAA,CAAAS,CAAA,OAAAP,CAAA,SAAAA,CAAA,CAAAoC,IAAA,CAAAtC,CAAA,4BAAAA,CAAA,CAAAyD,IAAA,SAAAzD,CAAA,OAAA+D,KAAA,CAAA/D,CAAA,CAAAgE,MAAA,SAAAzD,CAAA,OAAAI,CAAA,YAAAT,EAAA,aAAAK,CAAA,GAAAP,CAAA,CAAAgE,MAAA,OAAA3D,CAAA,CAAAiC,IAAA,CAAAtC,CAAA,EAAAO,CAAA,UAAAL,CAAA,CAAAe,KAAA,GAAAjB,CAAA,CAAAO,CAAA,GAAAL,CAAA,CAAAuB,IAAA,OAAAvB,CAAA,SAAAA,CAAA,CAAAe,KAAA,GAAAhB,CAAA,EAAAC,CAAA,CAAAuB,IAAA,OAAAvB,CAAA,YAAAS,CAAA,CAAA8C,IAAA,GAAA9C,CAAA,gBAAA6C,SAAA,CAAAJ,OAAA,CAAApD,CAAA,kCAAAwC,iBAAA,CAAApC,SAAA,GAAAqC,0BAAA,EAAA1B,CAAA,CAAAgC,CAAA,iBAAAN,0BAAA,GAAA1B,CAAA,CAAA0B,0BAAA,iBAAAD,iBAAA,GAAAA,iBAAA,CAAAyB,WAAA,GAAAlD,CAAA,CAAA0B,0BAAA,EAAA5B,CAAA,wBAAAb,CAAA,CAAAkE,mBAAA,aAAAjE,CAAA,QAAAD,CAAA,wBAAAC,CAAA,IAAAA,CAAA,CAAAkE,WAAA,WAAAnE,CAAA,KAAAA,CAAA,KAAAwC,iBAAA,6BAAAxC,CAAA,CAAAiE,WAAA,IAAAjE,CAAA,CAAAoE,IAAA,OAAApE,CAAA,CAAAqE,IAAA,aAAApE,CAAA,WAAAE,MAAA,CAAAmE,cAAA,GAAAnE,MAAA,CAAAmE,cAAA,CAAArE,CAAA,EAAAwC,0BAAA,KAAAxC,CAAA,CAAAsE,SAAA,GAAA9B,0BAAA,EAAA1B,CAAA,CAAAd,CAAA,EAAAY,CAAA,yBAAAZ,CAAA,CAAAG,SAAA,GAAAD,MAAA,CAAAoB,MAAA,CAAAwB,CAAA,GAAA9C,CAAA,KAAAD,CAAA,CAAAwE,KAAA,aAAAvE,CAAA,aAAAqD,OAAA,EAAArD,CAAA,OAAA+C,CAAA,CAAAG,aAAA,CAAA/C,SAAA,GAAAW,CAAA,CAAAoC,aAAA,CAAA/C,SAAA,EAAAO,CAAA,iCAAAX,CAAA,CAAAmD,aAAA,GAAAA,aAAA,EAAAnD,CAAA,CAAAyE,KAAA,aAAAxE,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,EAAAE,CAAA,eAAAA,CAAA,KAAAA,CAAA,GAAAiE,OAAA,OAAA/D,CAAA,OAAAwC,aAAA,CAAA9B,CAAA,CAAApB,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,GAAAE,CAAA,UAAAT,CAAA,CAAAkE,mBAAA,CAAAhE,CAAA,IAAAS,CAAA,GAAAA,CAAA,CAAA8C,IAAA,GAAAF,IAAA,WAAAtD,CAAA,WAAAA,CAAA,CAAAwB,IAAA,GAAAxB,CAAA,CAAAgB,KAAA,GAAAN,CAAA,CAAA8C,IAAA,WAAAT,CAAA,CAAAD,CAAA,GAAAhC,CAAA,CAAAgC,CAAA,EAAAlC,CAAA,gBAAAE,CAAA,CAAAgC,CAAA,EAAAtC,CAAA,iCAAAM,CAAA,CAAAgC,CAAA,6DAAA/C,CAAA,CAAA2E,IAAA,aAAA1E,CAAA,QAAAD,CAAA,GAAAG,MAAA,CAAAF,CAAA,GAAAC,CAAA,gBAAAG,CAAA,IAAAL,CAAA,EAAAE,CAAA,CAAA0E,OAAA,CAAAvE,CAAA,mBAAAJ,EAAA,WAAAC,CAAA,CAAA8D,MAAA,QAAA3D,CAAA,GAAAH,CAAA,CAAA2E,GAAA,OAAA7E,CAAA,SAAAC,CAAA,CAAAgB,KAAA,GAAAZ,CAAA,EAAAJ,CAAA,CAAAwB,IAAA,OAAAxB,CAAA,SAAAA,CAAA,CAAAwB,IAAA,OAAAxB,CAAA,QAAAD,CAAA,CAAA8E,MAAA,GAAAhC,CAAA,EAAAT,OAAA,CAAAjC,SAAA,KAAA+D,WAAA,EAAA9B,OAAA,EAAAyB,KAAA,WAAAA,MAAA9D,CAAA,aAAA+E,IAAA,QAAAtB,IAAA,WAAA1B,IAAA,QAAAC,KAAA,GAAA/B,CAAA,OAAAwB,IAAA,YAAAG,QAAA,cAAAF,MAAA,gBAAAC,GAAA,GAAA1B,CAAA,OAAA0D,UAAA,CAAAV,OAAA,CAAAY,CAAA,IAAA7D,CAAA,WAAAE,CAAA,kBAAAA,CAAA,CAAA8E,MAAA,OAAA3E,CAAA,CAAAiC,IAAA,OAAApC,CAAA,MAAA6D,KAAA,EAAA7D,CAAA,CAAA+E,KAAA,cAAA/E,CAAA,IAAAD,CAAA,MAAAiF,IAAA,WAAAA,KAAA,SAAAzD,IAAA,WAAAxB,CAAA,QAAA0D,UAAA,wBAAA1D,CAAA,CAAAmC,IAAA,QAAAnC,CAAA,CAAA0B,GAAA,cAAAwD,IAAA,KAAAlD,iBAAA,WAAAA,kBAAAjC,CAAA,aAAAyB,IAAA,QAAAzB,CAAA,MAAAE,CAAA,kBAAAG,EAAAJ,CAAA,IAAAU,CAAA,CAAAyB,IAAA,YAAAzB,CAAA,CAAAgB,GAAA,GAAA3B,CAAA,EAAAE,CAAA,CAAAuD,IAAA,GAAAxD,CAAA,aAAAM,CAAA,GAAAL,CAAA,CAAAyD,UAAA,CAAAK,MAAA,MAAAzD,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAkD,UAAA,CAAApD,CAAA,GAAAI,CAAA,GAAAF,CAAA,KAAAI,CAAA,QAAAkE,IAAA,EAAAhE,CAAA,GAAAN,CAAA,KAAAY,CAAA,GAAAZ,CAAA,gBAAAA,CAAA,YAAAJ,CAAA,kBAAAU,CAAA,KAAAM,CAAA,QAAAG,KAAA,wDAAAf,CAAA,OAAAA,CAAA,OAAAI,CAAA,QAAAA,CAAA,GAAAE,CAAA,cAAAW,MAAA,gBAAAC,GAAA,GAAA1B,CAAA,EAAAI,CAAA,CAAAU,CAAA,WAAAF,CAAA,GAAAQ,CAAA,SAAAhB,CAAA,CAAAgB,CAAA,cAAAa,MAAA,WAAAA,OAAAjC,CAAA,EAAAD,CAAA,aAAAE,CAAA,QAAAyD,UAAA,CAAAK,MAAA,MAAA9D,CAAA,SAAAA,CAAA,QAAAG,CAAA,QAAAsD,UAAA,CAAAzD,CAAA,OAAAG,CAAA,YAAAA,CAAA,YAAA0E,IAAA,SAAAA,IAAA,GAAA1E,CAAA,WAAAE,CAAA,GAAAF,CAAA,aAAAE,CAAA,iBAAAN,CAAA,mBAAAA,CAAA,KAAAM,CAAA,OAAAP,CAAA,IAAAA,CAAA,IAAAO,CAAA,QAAAA,CAAA,cAAAE,CAAA,GAAAF,CAAA,GAAAA,CAAA,iBAAAE,CAAA,CAAA2B,IAAA,GAAAnC,CAAA,EAAAQ,CAAA,CAAAkB,GAAA,GAAA3B,CAAA,EAAAO,CAAA,SAAAmB,MAAA,gBAAA+B,IAAA,GAAAlD,CAAA,KAAAuB,CAAA,SAAAsD,QAAA,CAAA3E,CAAA,MAAA2E,QAAA,WAAAA,SAAAnF,CAAA,EAAAD,CAAA,oBAAAC,CAAA,CAAAmC,IAAA,QAAAnC,CAAA,CAAA0B,GAAA,qBAAA1B,CAAA,CAAAmC,IAAA,mBAAAnC,CAAA,CAAAmC,IAAA,QAAAqB,IAAA,GAAAxD,CAAA,CAAA0B,GAAA,gBAAA1B,CAAA,CAAAmC,IAAA,SAAA+C,IAAA,QAAAxD,GAAA,GAAA1B,CAAA,CAAA0B,GAAA,OAAAD,MAAA,kBAAA+B,IAAA,yBAAAxD,CAAA,CAAAmC,IAAA,IAAApC,CAAA,UAAAyD,IAAA,GAAAzD,CAAA,GAAA8B,CAAA,KAAAuD,MAAA,WAAAA,OAAApF,CAAA,aAAAD,CAAA,QAAA2D,UAAA,CAAAK,MAAA,MAAAhE,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAyD,UAAA,CAAA3D,CAAA,OAAAE,CAAA,QAAAD,CAAA,cAAAmF,QAAA,CAAAlF,CAAA,KAAAA,CAAA,MAAA2D,CAAA,CAAA3D,CAAA,GAAA4B,CAAA,yBAAAwD,OAAArF,CAAA,aAAAD,CAAA,QAAA2D,UAAA,CAAAK,MAAA,MAAAhE,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAyD,UAAA,CAAA3D,CAAA,OAAAE,CAAA,QAAAD,CAAA,QAAAI,CAAA,GAAAH,CAAA,qBAAAG,CAAA,CAAA+B,IAAA,QAAA7B,CAAA,GAAAF,CAAA,CAAAsB,GAAA,EAAAkC,CAAA,CAAA3D,CAAA,YAAAK,CAAA,YAAAiB,KAAA,8BAAA+D,aAAA,WAAAA,cAAAvF,CAAA,EAAAE,CAAA,EAAAG,CAAA,gBAAAuB,QAAA,KAAAnB,CAAA,EAAAqC,CAAA,CAAA9C,CAAA,GAAAA,CAAA,EAAAE,CAAA,EAAAG,CAAA,EAAAA,CAAA,oBAAAqB,MAAA,UAAAC,GAAA,GAAA1B,CAAA,GAAA6B,CAAA,OAAA9B,CAAA;AAAA,SAAAwF,mBAAAnF,CAAA,EAAAJ,CAAA,EAAAC,CAAA,EAAAF,CAAA,EAAAO,CAAA,EAAAI,CAAA,EAAAI,CAAA,cAAAN,CAAA,GAAAJ,CAAA,CAAAM,CAAA,EAAAI,CAAA,GAAAF,CAAA,GAAAJ,CAAA,CAAAQ,KAAA,WAAAZ,CAAA,gBAAAH,CAAA,CAAAG,CAAA,KAAAI,CAAA,CAAAgB,IAAA,GAAAxB,CAAA,CAAAY,CAAA,IAAA6D,OAAA,CAAArB,OAAA,CAAAxC,CAAA,EAAA0C,IAAA,CAAAvD,CAAA,EAAAO,CAAA;AAAA,SAAAkF,kBAAApF,CAAA,6BAAAJ,CAAA,SAAAC,CAAA,GAAAwF,SAAA,aAAAhB,OAAA,WAAA1E,CAAA,EAAAO,CAAA,QAAAI,CAAA,GAAAN,CAAA,CAAAsF,KAAA,CAAA1F,CAAA,EAAAC,CAAA,YAAA0F,MAAAvF,CAAA,IAAAmF,kBAAA,CAAA7E,CAAA,EAAAX,CAAA,EAAAO,CAAA,EAAAqF,KAAA,EAAAC,MAAA,UAAAxF,CAAA,cAAAwF,OAAAxF,CAAA,IAAAmF,kBAAA,CAAA7E,CAAA,EAAAX,CAAA,EAAAO,CAAA,EAAAqF,KAAA,EAAAC,MAAA,WAAAxF,CAAA,KAAAuF,KAAA;AADA;AACA;AACA;AACA;;AAEA;AACA,IAAME,YAAY,GAAG,uBAAuB;;AAE5C;AACA,IAAIC,SAAS,GAAG,IAAI;;AAEpB;AACAC,MAAM,CAACC,OAAO,CAACC,WAAW,CAACC,WAAW,CAAC,YAAM;EAC3CC,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;;EAE5D;EACAL,MAAM,CAACM,OAAO,CAACC,KAAK,CAACC,GAAG,CAAC;IACvBC,SAAS,EAAEX,YAAY;IACvBY,oBAAoB,EAAE,IAAI;IAC1BC,YAAY,EAAE,IAAI;IAClBC,eAAe,EAAE;EACnB,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AACAZ,MAAM,CAACC,OAAO,CAACY,SAAS,CAACV,WAAW,CAAC,UAACW,OAAO,EAAEC,MAAM,EAAEC,YAAY,EAAK;EACtE,IAAIF,OAAO,CAAC1E,IAAI,KAAK,aAAa,EAAE;IAClC6E,gBAAgB,CAACH,OAAO,CAACI,QAAQ,EAAEJ,OAAO,CAACpF,MAAM,EAAEoF,OAAO,CAACK,IAAI,CAAC,CAC7D5D,IAAI,CAAC,UAAA6D,QAAQ;MAAA,OAAIJ,YAAY,CAAC;QAAEK,OAAO,EAAE,IAAI;QAAEF,IAAI,EAAEC;MAAS,CAAC,CAAC;IAAA,EAAC,SAC5D,CAAC,UAAAE,KAAK;MAAA,OAAIN,YAAY,CAAC;QAAEK,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEA,KAAK,CAACR;MAAQ,CAAC,CAAC;IAAA,EAAC;IACzE,OAAO,IAAI,CAAC,CAAC;EACf;EAEA,IAAIA,OAAO,CAAC1E,IAAI,KAAK,mBAAmB,EAAE;IACxCmF,gBAAgB,CAACT,OAAO,CAACU,KAAK,EAAEV,OAAO,CAACA,OAAO,EAAEA,OAAO,CAACW,OAAO,CAAC;IACjET,YAAY,CAAC;MAAEK,OAAO,EAAE;IAAK,CAAC,CAAC;IAC/B,OAAO,IAAI;EACb;EAEA,IAAIP,OAAO,CAAC1E,IAAI,KAAK,YAAY,EAAE;IACjCsF,aAAa,CAAC,CAAC,CACZnE,IAAI,CAAC,UAAAoE,MAAM;MAAA,OAAIX,YAAY,CAAC;QAAEK,OAAO,EAAE,IAAI;QAAEF,IAAI,EAAEQ;MAAO,CAAC,CAAC;IAAA,EAAC,SACxD,CAAC,UAAAL,KAAK;MAAA,OAAIN,YAAY,CAAC;QAAEK,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEA,KAAK,CAACR;MAAQ,CAAC,CAAC;IAAA,EAAC;IACzE,OAAO,IAAI;EACb;EAEA,IAAIA,OAAO,CAAC1E,IAAI,KAAK,aAAa,EAAE;IAClCwF,MAAM,CAAC,CAAC,CACLrE,IAAI,CAAC,UAAAoE,MAAM;MAAA,OAAIX,YAAY,CAAC;QAAEK,OAAO,EAAE,IAAI;QAAEF,IAAI,EAAEQ;MAAO,CAAC,CAAC;IAAA,EAAC,SACxD,CAAC,UAAAL,KAAK;MAAA,OAAIN,YAAY,CAAC;QAAEK,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEA,KAAK,CAACR;MAAQ,CAAC,CAAC;IAAA,EAAC;IACzE,OAAO,IAAI;EACb;EAEA,IAAIA,OAAO,CAAC1E,IAAI,KAAK,aAAa,EAAE;IAClCyF,eAAe,CAAC,CAAC,CACdtE,IAAI,CAAC,UAAAuE,MAAM;MAAA,OAAId,YAAY,CAAC;QAAEK,OAAO,EAAE,IAAI;QAAEF,IAAI,EAAEW;MAAO,CAAC,CAAC;IAAA,EAAC,SACxD,CAAC,UAAAR,KAAK;MAAA,OAAIN,YAAY,CAAC;QAAEK,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEA,KAAK,CAACR;MAAQ,CAAC,CAAC;IAAA,EAAC;IACzE,OAAO,IAAI;EACb;AACF,CAAC,CAAC;;AAEF;AACA,SAASS,gBAAgBA,CAACC,KAAK,EAAEV,OAAO,EAAgB;EAAA,IAAdW,OAAO,GAAA/B,SAAA,CAAA1B,MAAA,QAAA0B,SAAA,QAAAqC,SAAA,GAAArC,SAAA,MAAG,EAAE;EACpDM,MAAM,CAACgC,aAAa,CAACzG,MAAM,CAAC;IAC1Ba,IAAI,EAAE,OAAO;IACb6F,OAAO,EAAE,kBAAkB;IAC3BT,KAAK,EAAEA,KAAK;IACZV,OAAO,EAAEA,OAAO;IAChBoB,OAAO,EAAET,OAAO,CAACU,GAAG,CAAC,UAAAC,MAAM;MAAA,OAAK;QAAEZ,KAAK,EAAEY;MAAO,CAAC;IAAA,CAAC,CAAC;IACnDC,kBAAkB,EAAE;EACtB,CAAC,CAAC;AACJ;;AAEA;AACArC,MAAM,CAACgC,aAAa,CAACM,eAAe,CAACnC,WAAW,CAAC,UAACoC,cAAc,EAAEC,WAAW,EAAK;EAChFpC,OAAO,CAACC,GAAG,iBAAAoC,MAAA,CAAiBF,cAAc,cAAAE,MAAA,CAAWD,WAAW,aAAU,CAAC;EAC3E;AACF,CAAC,CAAC;;AAEF;AAAA,SACevB,gBAAgBA,CAAAyB,EAAA;EAAA,OAAAC,iBAAA,CAAAhD,KAAA,OAAAD,SAAA;AAAA,EAoC/B;AAAA,SAAAiD,kBAAA;EAAAA,iBAAA,GAAAlD,iBAAA,cAAA1F,mBAAA,GAAAsE,IAAA,CApCA,SAAAuE,SAAgC1B,QAAQ;IAAA,IAAAxF,MAAA;MAAAyF,IAAA;MAAAV,SAAA;MAAAoC,GAAA;MAAAC,OAAA;MAAA1B,QAAA;MAAA2B,WAAA;MAAAC,MAAA,GAAAtD,SAAA;IAAA,OAAA3F,mBAAA,GAAAwC,IAAA,UAAA0G,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAnE,IAAA,GAAAmE,SAAA,CAAAzF,IAAA;QAAA;UAAE/B,MAAM,GAAAsH,MAAA,CAAAhF,MAAA,QAAAgF,MAAA,QAAAjB,SAAA,GAAAiB,MAAA,MAAG,KAAK;UAAE7B,IAAI,GAAA6B,MAAA,CAAAhF,MAAA,QAAAgF,MAAA,QAAAjB,SAAA,GAAAiB,MAAA,MAAG,IAAI;UAAAE,SAAA,CAAAzF,IAAA;UAAA,OAC3C0F,YAAY,CAAC,CAAC;QAAA;UAAhC1C,SAAS,GAAAyC,SAAA,CAAAnH,IAAA;UACT8G,GAAG,MAAAJ,MAAA,CAAMhC,SAAS,EAAAgC,MAAA,CAAGvB,QAAQ;UAE7B4B,OAAO,GAAG;YACdpH,MAAM,EAAEA,MAAM;YACd0H,OAAO,EAAE;cACP,cAAc,EAAE;YAClB,CAAC;YACDC,WAAW,EAAE,SAAS,CAAC;UACzB,CAAC;UAED,IAAIlC,IAAI,KAAKzF,MAAM,KAAK,MAAM,IAAIA,MAAM,KAAK,KAAK,CAAC,EAAE;YACnDoH,OAAO,CAACQ,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACrC,IAAI,CAAC;UACrC;UAAC+B,SAAA,CAAAnE,IAAA;UAAAmE,SAAA,CAAAzF,IAAA;UAAA,OAGwBgG,KAAK,CAACZ,GAAG,EAAEC,OAAO,CAAC;QAAA;UAApC1B,QAAQ,GAAA8B,SAAA,CAAAnH,IAAA;UAAA,IACTqF,QAAQ,CAACsC,EAAE;YAAAR,SAAA,CAAAzF,IAAA;YAAA;UAAA;UAAA,MAEV2D,QAAQ,CAACU,MAAM,KAAK,GAAG;YAAAoB,SAAA,CAAAzF,IAAA;YAAA;UAAA;UAAAyF,SAAA,CAAAzF,IAAA;UAAA,OACCkG,WAAW,CAAC,CAAC;QAAA;UAAjCZ,WAAW,GAAAG,SAAA,CAAAnH,IAAA;UAAA,KACbgH,WAAW;YAAAG,SAAA,CAAAzF,IAAA;YAAA;UAAA;UAAA,OAAAyF,SAAA,CAAAhH,MAAA,WAEN+E,gBAAgB,CAACC,QAAQ,EAAExF,MAAM,EAAEyF,IAAI,CAAC;QAAA;UAAA,MAG7C,IAAI3F,KAAK,0BAAAiH,MAAA,CAA0BrB,QAAQ,CAACU,MAAM,QAAAW,MAAA,CAAKrB,QAAQ,CAACwC,UAAU,CAAE,CAAC;QAAA;UAAAV,SAAA,CAAAzF,IAAA;UAAA,OAExE2D,QAAQ,CAACyC,IAAI,CAAC,CAAC;QAAA;UAAA,OAAAX,SAAA,CAAAhH,MAAA,WAAAgH,SAAA,CAAAnH,IAAA;QAAA;UAAAmH,SAAA,CAAAnE,IAAA;UAAAmE,SAAA,CAAAY,EAAA,GAAAZ,SAAA;UAE5B9C,OAAO,CAACkB,KAAK,CAAC,qBAAqB,EAAA4B,SAAA,CAAAY,EAAO,CAAC;UAAC,MAAAZ,SAAA,CAAAY,EAAA;QAAA;QAAA;UAAA,OAAAZ,SAAA,CAAAhE,IAAA;MAAA;IAAA,GAAA0D,QAAA;EAAA,CAG/C;EAAA,OAAAD,iBAAA,CAAAhD,KAAA,OAAAD,SAAA;AAAA;AAAA,SAGcyD,YAAYA,CAAA;EAAA,OAAAY,aAAA,CAAApE,KAAA,OAAAD,SAAA;AAAA,EAQ3B;AAAA,SAAAqE,cAAA;EAAAA,aAAA,GAAAtE,iBAAA,cAAA1F,mBAAA,GAAAsE,IAAA,CARA,SAAA2F,SAAA;IAAA,OAAAjK,mBAAA,GAAAwC,IAAA,UAAA0H,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAnF,IAAA,GAAAmF,SAAA,CAAAzG,IAAA;QAAA;UAAA,OAAAyG,SAAA,CAAAhI,MAAA,WACS,IAAIwC,OAAO,CAAC,UAACrB,OAAO,EAAK;YAC9B2C,MAAM,CAACM,OAAO,CAACC,KAAK,CAAC4D,GAAG,CAAC,WAAW,EAAE,UAACxC,MAAM,EAAK;cAChDtE,OAAO,CAACsE,MAAM,CAAClB,SAAS,IAAIX,YAAY,CAAC;YAC3C,CAAC,CAAC;UACJ,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAoE,SAAA,CAAAhF,IAAA;MAAA;IAAA,GAAA8E,QAAA;EAAA,CACH;EAAA,OAAAD,aAAA,CAAApE,KAAA,OAAAD,SAAA;AAAA;AAGD0E,WAAW,cAAA3E,iBAAA,cAAA1F,mBAAA,GAAAsE,IAAA,CAAC,SAAAgG,QAAA;EAAA,IAAAC,UAAA,EAAAnD,IAAA;EAAA,OAAApH,mBAAA,GAAAwC,IAAA,UAAAgI,SAAAC,QAAA;IAAA,kBAAAA,QAAA,CAAAzF,IAAA,GAAAyF,QAAA,CAAA/G,IAAA;MAAA;QAAA+G,QAAA,CAAAzF,IAAA;QAAAyF,QAAA,CAAA/G,IAAA;QAAA,OAGiBoE,eAAe,CAAC,CAAC;MAAA;QAApCyC,UAAU,GAAAE,QAAA,CAAAzI,IAAA;QAAA,IACXuI,UAAU,CAACG,aAAa;UAAAD,QAAA,CAAA/G,IAAA;UAAA;QAAA;QAC3B2C,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;QAAC,OAAAmE,QAAA,CAAAtI,MAAA;MAAA;QAAAsI,QAAA,CAAA/G,IAAA;QAAA,OAIzCwD,gBAAgB,CAAC,kBAAkB,CAAC;MAAA;QAAjDE,IAAI,GAAAqD,QAAA,CAAAzI,IAAA;QACV,IAAIoF,IAAI,CAACuD,SAAS,IAAIvD,IAAI,CAACuD,SAAS,CAAC1G,MAAM,GAAG,CAAC,EAAE;UAC/CmD,IAAI,CAACuD,SAAS,CAACzH,OAAO,CAAC,UAAA0H,QAAQ,EAAI;YACjCpD,gBAAgB,CACd,eAAe,EACfoD,QAAQ,CAAC7D,OAAO,EAChB,CAAC,MAAM,EAAE,QAAQ,EAAE,cAAc,CACnC,CAAC;UACH,CAAC,CAAC;QACJ;QAAC0D,QAAA,CAAA/G,IAAA;QAAA;MAAA;QAAA+G,QAAA,CAAAzF,IAAA;QAAAyF,QAAA,CAAAV,EAAA,GAAAU,QAAA;QAEDpE,OAAO,CAACkB,KAAK,CAAC,4BAA4B,EAAAkD,QAAA,CAAAV,EAAO,CAAC;MAAC;MAAA;QAAA,OAAAU,QAAA,CAAAtF,IAAA;IAAA;EAAA,GAAAmF,OAAA;AAAA,CAEtD,IAAE,MAAM,CAAC,CAAC,CAAC;;AAEZ;;AAEA;AAAA,SACe3C,aAAaA,CAAA;EAAA,OAAAkD,cAAA,CAAAjF,KAAA,OAAAD,SAAA;AAAA,EAqB5B;AAAA,SAAAkF,eAAA;EAAAA,cAAA,GAAAnF,iBAAA,cAAA1F,mBAAA,GAAAsE,IAAA,CArBA,SAAAwG,SAAA;IAAA,IAAApE,SAAA,EAAAqE,QAAA;IAAA,OAAA/K,mBAAA,GAAAwC,IAAA,UAAAwI,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAjG,IAAA,GAAAiG,SAAA,CAAAvH,IAAA;QAAA;UAAAuH,SAAA,CAAAjG,IAAA;UAEI;UACAgB,SAAS,GAAGkF,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;;UAEvD;UACApF,MAAM,CAACM,OAAO,CAACC,KAAK,CAACC,GAAG,CAAC;YAAE,aAAa,EAAET;UAAU,CAAC,CAAC;UAACiF,SAAA,CAAAvH,IAAA;UAAA,OAE/B0F,YAAY,CAAC,CAAC;QAAA;UAAhC1C,SAAS,GAAAuE,SAAA,CAAAjJ,IAAA;UACT+I,QAAQ,MAAArC,MAAA,CAAMhC,SAAS,sBAE7B;UACAT,MAAM,CAACqF,IAAI,CAAC9J,MAAM,CAAC;YAAEsH,GAAG,EAAEiC;UAAS,CAAC,CAAC;UAAC,OAAAE,SAAA,CAAA9I,MAAA,WAE/B;YAAE4E,OAAO,EAAE;UAAkB,CAAC;QAAA;UAAAkE,SAAA,CAAAjG,IAAA;UAAAiG,SAAA,CAAAlB,EAAA,GAAAkB,SAAA;UAErC5E,OAAO,CAACkB,KAAK,CAAC,2BAA2B,EAAA0D,SAAA,CAAAlB,EAAO,CAAC;UAAC,MAAAkB,SAAA,CAAAlB,EAAA;QAAA;QAAA;UAAA,OAAAkB,SAAA,CAAA9F,IAAA;MAAA;IAAA,GAAA2F,QAAA;EAAA,CAGrD;EAAA,OAAAD,cAAA,CAAAjF,KAAA,OAAAD,SAAA;AAAA;AAAA,SAGckC,MAAMA,CAAA;EAAA,OAAA0D,OAAA,CAAA3F,KAAA,OAAAD,SAAA;AAAA,EAqBrB;AAAA,SAAA4F,QAAA;EAAAA,OAAA,GAAA7F,iBAAA,cAAA1F,mBAAA,GAAAsE,IAAA,CArBA,SAAAkH,SAAA;IAAA,IAAA9E,SAAA,EAAA+E,SAAA;IAAA,OAAAzL,mBAAA,GAAAwC,IAAA,UAAAkJ,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA3G,IAAA,GAAA2G,SAAA,CAAAjI,IAAA;QAAA;UAAAiI,SAAA,CAAA3G,IAAA;UAAA2G,SAAA,CAAAjI,IAAA;UAAA,OAE4B0F,YAAY,CAAC,CAAC;QAAA;UAAhC1C,SAAS,GAAAiF,SAAA,CAAA3J,IAAA;UACTyJ,SAAS,MAAA/C,MAAA,CAAMhC,SAAS,uBAE9B;UAAAiF,SAAA,CAAAjI,IAAA;UAAA,OACMgG,KAAK,CAAC+B,SAAS,EAAE;YACrB9J,MAAM,EAAE,KAAK;YACb2H,WAAW,EAAE,SAAS,CAAC;UACzB,CAAC,CAAC;QAAA;UAEF;UACArD,MAAM,CAACM,OAAO,CAACC,KAAK,CAACC,GAAG,CAAC;YAAEI,eAAe,EAAE;UAAM,CAAC,CAAC;UAAC,OAAA8E,SAAA,CAAAxJ,MAAA,WAE9C;YAAE4E,OAAO,EAAE;UAA0B,CAAC;QAAA;UAAA4E,SAAA,CAAA3G,IAAA;UAAA2G,SAAA,CAAA5B,EAAA,GAAA4B,SAAA;UAE7CtF,OAAO,CAACkB,KAAK,CAAC,mBAAmB,EAAAoE,SAAA,CAAA5B,EAAO,CAAC;UAAC,MAAA4B,SAAA,CAAA5B,EAAA;QAAA;QAAA;UAAA,OAAA4B,SAAA,CAAAxG,IAAA;MAAA;IAAA,GAAAqG,QAAA;EAAA,CAG7C;EAAA,OAAAD,OAAA,CAAA3F,KAAA,OAAAD,SAAA;AAAA;AAAA,SAGcmC,eAAeA,CAAA;EAAA,OAAA8D,gBAAA,CAAAhG,KAAA,OAAAD,SAAA;AAAA,EA6B9B;AAAA,SAAAiG,iBAAA;EAAAA,gBAAA,GAAAlG,iBAAA,cAAA1F,mBAAA,GAAAsE,IAAA,CA7BA,SAAAuH,SAAA;IAAA,IAAAnF,SAAA,EAAAoF,SAAA,EAAAzE,QAAA,EAAAU,MAAA;IAAA,OAAA/H,mBAAA,GAAAwC,IAAA,UAAAuJ,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAhH,IAAA,GAAAgH,SAAA,CAAAtI,IAAA;QAAA;UAAAsI,SAAA,CAAAhH,IAAA;UAAAgH,SAAA,CAAAtI,IAAA;UAAA,OAE4B0F,YAAY,CAAC,CAAC;QAAA;UAAhC1C,SAAS,GAAAsF,SAAA,CAAAhK,IAAA;UACT8J,SAAS,MAAApD,MAAA,CAAMhC,SAAS,uBAE9B;UAAAsF,SAAA,CAAAtI,IAAA;UAAA,OACuBgG,KAAK,CAACoC,SAAS,EAAE;YACtCnK,MAAM,EAAE,KAAK;YACb2H,WAAW,EAAE,SAAS,CAAC;UACzB,CAAC,CAAC;QAAA;UAHIjC,QAAQ,GAAA2E,SAAA,CAAAhK,IAAA;UAAA,IAKTqF,QAAQ,CAACsC,EAAE;YAAAqC,SAAA,CAAAtI,IAAA;YAAA;UAAA;UAAA,MACR,IAAIjC,KAAK,0BAAAiH,MAAA,CAA0BrB,QAAQ,CAACU,MAAM,QAAAW,MAAA,CAAKrB,QAAQ,CAACwC,UAAU,CAAE,CAAC;QAAA;UAAAmC,SAAA,CAAAtI,IAAA;UAAA,OAGhE2D,QAAQ,CAACyC,IAAI,CAAC,CAAC;QAAA;UAA9B/B,MAAM,GAAAiE,SAAA,CAAAhK,IAAA;UAEZ;UACAiE,MAAM,CAACM,OAAO,CAACC,KAAK,CAACC,GAAG,CAAC;YAAEI,eAAe,EAAEkB,MAAM,CAAC2C;UAAc,CAAC,CAAC;UAAC,OAAAsB,SAAA,CAAA7J,MAAA,WAE7D4F,MAAM;QAAA;UAAAiE,SAAA,CAAAhH,IAAA;UAAAgH,SAAA,CAAAjC,EAAA,GAAAiC,SAAA;UAEb3F,OAAO,CAACkB,KAAK,CAAC,8BAA8B,EAAAyE,SAAA,CAAAjC,EAAO,CAAC;UACpD;UACA9D,MAAM,CAACM,OAAO,CAACC,KAAK,CAACC,GAAG,CAAC;YAAEI,eAAe,EAAE;UAAM,CAAC,CAAC;UAAC,OAAAmF,SAAA,CAAA7J,MAAA,WAC9C;YAAEuI,aAAa,EAAE,KAAK;YAAEnD,KAAK,EAAEyE,SAAA,CAAAjC,EAAA,CAAMhD;UAAQ,CAAC;QAAA;QAAA;UAAA,OAAAiF,SAAA,CAAA7G,IAAA;MAAA;IAAA,GAAA0G,QAAA;EAAA,CAExD;EAAA,OAAAD,gBAAA,CAAAhG,KAAA,OAAAD,SAAA;AAAA;AAAA,SAGciE,WAAWA,CAAA;EAAA,OAAAqC,YAAA,CAAArG,KAAA,OAAAD,SAAA;AAAA,EAuB1B;AAAA,SAAAsG,aAAA;EAAAA,YAAA,GAAAvG,iBAAA,cAAA1F,mBAAA,GAAAsE,IAAA,CAvBA,SAAA4H,SAAA;IAAA,IAAAxF,SAAA,EAAAyF,UAAA,EAAA9E,QAAA,EAAAO,MAAA;IAAA,OAAA5H,mBAAA,GAAAwC,IAAA,UAAA4J,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAArH,IAAA,GAAAqH,SAAA,CAAA3I,IAAA;QAAA;UAAA2I,SAAA,CAAArH,IAAA;UAAAqH,SAAA,CAAA3I,IAAA;UAAA,OAE4B0F,YAAY,CAAC,CAAC;QAAA;UAAhC1C,SAAS,GAAA2F,SAAA,CAAArK,IAAA;UACTmK,UAAU,MAAAzD,MAAA,CAAMhC,SAAS,8BAE/B;UAAA2F,SAAA,CAAA3I,IAAA;UAAA,OACuBgG,KAAK,CAACyC,UAAU,EAAE;YACvCxK,MAAM,EAAE,MAAM;YACd2H,WAAW,EAAE,SAAS,CAAC;UACzB,CAAC,CAAC;QAAA;UAHIjC,QAAQ,GAAAgF,SAAA,CAAArK,IAAA;UAAA,IAKTqF,QAAQ,CAACsC,EAAE;YAAA0C,SAAA,CAAA3I,IAAA;YAAA;UAAA;UAAA,MACR,IAAIjC,KAAK,0BAAAiH,MAAA,CAA0BrB,QAAQ,CAACU,MAAM,QAAAW,MAAA,CAAKrB,QAAQ,CAACwC,UAAU,CAAE,CAAC;QAAA;UAAAwC,SAAA,CAAA3I,IAAA;UAAA,OAGhE2D,QAAQ,CAACyC,IAAI,CAAC,CAAC;QAAA;UAA9BlC,MAAM,GAAAyE,SAAA,CAAArK,IAAA;UAAA,OAAAqK,SAAA,CAAAlK,MAAA,WACLyF,MAAM,CAACN,OAAO;QAAA;UAAA+E,SAAA,CAAArH,IAAA;UAAAqH,SAAA,CAAAtC,EAAA,GAAAsC,SAAA;UAErBhG,OAAO,CAACkB,KAAK,CAAC,+BAA+B,EAAA8E,SAAA,CAAAtC,EAAO,CAAC;UAAC,OAAAsC,SAAA,CAAAlK,MAAA,WAC/C,KAAK;QAAA;QAAA;UAAA,OAAAkK,SAAA,CAAAlH,IAAA;MAAA;IAAA,GAAA+G,QAAA;EAAA,CAEf;EAAA,OAAAD,YAAA,CAAArG,KAAA,OAAAD,SAAA;AAAA;AAGDmC,eAAe,CAAC,CAAC,CAACtE,IAAI,CAAC,UAAAuE,MAAM,EAAI;EAC/B1B,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEyB,MAAM,CAAC2C,aAAa,GAAG,eAAe,GAAG,mBAAmB,CAAC;AACnG,CAAC,CAAC,C","sources":["webpack://jira-action-items-chatbot/./background.js"],"sourcesContent":["/**\r\n * Background script for the Jira Action Items Chatbot extension\r\n * Handles API communication and notifications\r\n */\r\n\r\n// Server connection settings\r\nconst API_BASE_URL = 'http://localhost:8000';\r\n\r\n// Auth state for storing CSRF protection\r\nlet authState = null;\r\n\r\n// Listen for installation\r\nchrome.runtime.onInstalled.addListener(() => {\r\n  console.log('Jira Action Items Chatbot extension installed');\r\n  \r\n  // Initialize extension settings\r\n  chrome.storage.local.set({\r\n    serverUrl: API_BASE_URL,\r\n    notificationsEnabled: true,\r\n    lastSyncTime: null,\r\n    isAuthenticated: false\r\n  });\r\n});\r\n\r\n// Listen for messages from content scripts or popup\r\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\r\n  if (message.type === 'API_REQUEST') {\r\n    handleApiRequest(message.endpoint, message.method, message.data)\r\n      .then(response => sendResponse({ success: true, data: response }))\r\n      .catch(error => sendResponse({ success: false, error: error.message }));\r\n    return true; // Required for async sendResponse\r\n  }\r\n  \r\n  if (message.type === 'SHOW_NOTIFICATION') {\r\n    showNotification(message.title, message.message, message.actions);\r\n    sendResponse({ success: true });\r\n    return true;\r\n  }\r\n\r\n  if (message.type === 'AUTH_LOGIN') {\r\n    initiateLogin()\r\n      .then(result => sendResponse({ success: true, data: result }))\r\n      .catch(error => sendResponse({ success: false, error: error.message }));\r\n    return true;\r\n  }\r\n\r\n  if (message.type === 'AUTH_LOGOUT') {\r\n    logout()\r\n      .then(result => sendResponse({ success: true, data: result }))\r\n      .catch(error => sendResponse({ success: false, error: error.message }));\r\n    return true;\r\n  }\r\n\r\n  if (message.type === 'AUTH_STATUS') {\r\n    checkAuthStatus()\r\n      .then(status => sendResponse({ success: true, data: status }))\r\n      .catch(error => sendResponse({ success: false, error: error.message }));\r\n    return true;\r\n  }\r\n});\r\n\r\n// Notification handling\r\nfunction showNotification(title, message, actions = []) {\r\n  chrome.notifications.create({\r\n    type: 'basic',\r\n    iconUrl: 'icons/icon48.png',\r\n    title: title,\r\n    message: message,\r\n    buttons: actions.map(action => ({ title: action })),\r\n    requireInteraction: true\r\n  });\r\n}\r\n\r\n// Handle notification button clicks\r\nchrome.notifications.onButtonClicked.addListener((notificationId, buttonIndex) => {\r\n  console.log(`Notification ${notificationId} button ${buttonIndex} clicked`);\r\n  // Implement actions based on which button was clicked\r\n});\r\n\r\n// API request handling\r\nasync function handleApiRequest(endpoint, method = 'GET', data = null) {\r\n  const serverUrl = await getServerUrl();\r\n  const url = `${serverUrl}${endpoint}`;\r\n  \r\n  const options = {\r\n    method: method,\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    credentials: 'include' // Include cookies for cross-origin requests\r\n  };\r\n  \r\n  if (data && (method === 'POST' || method === 'PUT')) {\r\n    options.body = JSON.stringify(data);\r\n  }\r\n  \r\n  try {\r\n    const response = await fetch(url, options);\r\n    if (!response.ok) {\r\n      // If 401 Unauthorized, try to refresh auth\r\n      if (response.status === 401) {\r\n        const isRefreshed = await refreshAuth();\r\n        if (isRefreshed) {\r\n          // Retry the request after successful refresh\r\n          return handleApiRequest(endpoint, method, data);\r\n        }\r\n      }\r\n      throw new Error(`Server responded with ${response.status}: ${response.statusText}`);\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('API request failed:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Get server URL from storage\r\nasync function getServerUrl() {\r\n  return new Promise((resolve) => {\r\n    chrome.storage.local.get('serverUrl', (result) => {\r\n      resolve(result.serverUrl || API_BASE_URL);\r\n    });\r\n  });\r\n}\r\n\r\n// Check for reminders periodically\r\nsetInterval(async () => {\r\n  try {\r\n    // Check auth status first\r\n    const authStatus = await checkAuthStatus();\r\n    if (!authStatus.authenticated) {\r\n      console.log('Not authenticated, skipping reminder check');\r\n      return;\r\n    }\r\n\r\n    const data = await handleApiRequest('/reminders/check');\r\n    if (data.reminders && data.reminders.length > 0) {\r\n      data.reminders.forEach(reminder => {\r\n        showNotification(\r\n          'Jira Reminder',\r\n          reminder.message,\r\n          ['Done', 'Snooze', 'View Details']\r\n        );\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to check reminders:', error);\r\n  }\r\n}, 300000); // Check every 5 minutes\r\n\r\n// OAuth Authentication\r\n\r\n// Initiate the OAuth login process\r\nasync function initiateLogin() {\r\n  try {\r\n    // Generate a random state to protect against CSRF\r\n    authState = Math.random().toString(36).substring(2, 15);\r\n    \r\n    // Save state to storage for validation later\r\n    chrome.storage.local.set({ 'oauth_state': authState });\r\n    \r\n    const serverUrl = await getServerUrl();\r\n    const loginUrl = `${serverUrl}/api/auth/login`;\r\n    \r\n    // Open a new tab with the login URL\r\n    chrome.tabs.create({ url: loginUrl });\r\n    \r\n    return { message: 'Login initiated' };\r\n  } catch (error) {\r\n    console.error('Failed to initiate login:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Logout the user\r\nasync function logout() {\r\n  try {\r\n    const serverUrl = await getServerUrl();\r\n    const logoutUrl = `${serverUrl}/api/auth/logout`;\r\n    \r\n    // Call the logout API\r\n    await fetch(logoutUrl, { \r\n      method: 'GET',\r\n      credentials: 'include' // Include cookies\r\n    });\r\n    \r\n    // Update local storage auth status\r\n    chrome.storage.local.set({ isAuthenticated: false });\r\n    \r\n    return { message: 'Logged out successfully' };\r\n  } catch (error) {\r\n    console.error('Failed to logout:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Check if the user is authenticated\r\nasync function checkAuthStatus() {\r\n  try {\r\n    const serverUrl = await getServerUrl();\r\n    const statusUrl = `${serverUrl}/api/auth/status`;\r\n    \r\n    // Call the status API\r\n    const response = await fetch(statusUrl, { \r\n      method: 'GET',\r\n      credentials: 'include' // Include cookies\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`Server responded with ${response.status}: ${response.statusText}`);\r\n    }\r\n    \r\n    const status = await response.json();\r\n    \r\n    // Update local storage auth status\r\n    chrome.storage.local.set({ isAuthenticated: status.authenticated });\r\n    \r\n    return status;\r\n  } catch (error) {\r\n    console.error('Failed to check auth status:', error);\r\n    // In case of error, assume not authenticated\r\n    chrome.storage.local.set({ isAuthenticated: false });\r\n    return { authenticated: false, error: error.message };\r\n  }\r\n}\r\n\r\n// Refresh the auth token\r\nasync function refreshAuth() {\r\n  try {\r\n    const serverUrl = await getServerUrl();\r\n    const refreshUrl = `${serverUrl}/api/auth/refresh-token`;\r\n    \r\n    // Call the refresh token API\r\n    const response = await fetch(refreshUrl, { \r\n      method: 'POST',\r\n      credentials: 'include' // Include cookies\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`Server responded with ${response.status}: ${response.statusText}`);\r\n    }\r\n    \r\n    const result = await response.json();\r\n    return result.success;\r\n  } catch (error) {\r\n    console.error('Failed to refresh auth token:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// Check auth status when extension loads\r\ncheckAuthStatus().then(status => {\r\n  console.log('Initial auth status:', status.authenticated ? 'Authenticated' : 'Not authenticated');\r\n}); "],"names":["_regeneratorRuntime","r","t","e","Object","prototype","n","hasOwnProperty","o","Symbol","i","iterator","a","asyncIterator","u","toStringTag","c","defineProperty","value","enumerable","configurable","writable","h","Generator","create","Error","done","method","arg","delegate","d","f","sent","_sent","dispatchException","abrupt","s","type","Context","call","wrap","GeneratorFunction","GeneratorFunctionPrototype","l","p","getPrototypeOf","y","x","v","g","forEach","_invoke","AsyncIterator","_typeof","resolve","__await","then","TypeError","next","w","tryEntries","push","m","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","unshift","pop","values","prev","charAt","slice","stop","rval","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","API_BASE_URL","authState","chrome","runtime","onInstalled","addListener","console","log","storage","local","set","serverUrl","notificationsEnabled","lastSyncTime","isAuthenticated","onMessage","message","sender","sendResponse","handleApiRequest","endpoint","data","response","success","error","showNotification","title","actions","initiateLogin","result","logout","checkAuthStatus","status","undefined","notifications","iconUrl","buttons","map","action","requireInteraction","onButtonClicked","notificationId","buttonIndex","concat","_x","_handleApiRequest","_callee2","url","options","isRefreshed","_args2","_callee2$","_context2","getServerUrl","headers","credentials","body","JSON","stringify","fetch","ok","refreshAuth","statusText","json","t0","_getServerUrl","_callee3","_callee3$","_context3","get","setInterval","_callee","authStatus","_callee$","_context","authenticated","reminders","reminder","_initiateLogin","_callee4","loginUrl","_callee4$","_context4","Math","random","toString","substring","tabs","_logout","_callee5","logoutUrl","_callee5$","_context5","_checkAuthStatus","_callee6","statusUrl","_callee6$","_context6","_refreshAuth","_callee7","refreshUrl","_callee7$","_context7"],"sourceRoot":""}