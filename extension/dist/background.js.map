{"version":3,"file":"background.js","mappings":"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","sources":["webpack://jira-action-items-chatbot/./background.js"],"sourcesContent":["/**\r\n * Background script for the Jira Action Items Chatbot extension\r\n * Handles API communication and notifications\r\n */\r\n\r\n// Server connection settings\r\nconst API_BASE_URL = 'http://localhost:8000';\r\n\r\n// Auth state for storing CSRF protection\r\nlet authState = null;\r\n\r\n// Notification state\r\nlet lastNotificationCheck = 0;\r\nconst NOTIFICATION_CHECK_INTERVAL = 5 * 60 * 1000; // 5 minutes in milliseconds\r\nlet notificationQueue = [];\r\nlet isProcessingQueue = false;\r\nlet checkRemindersTimeout = null;\r\n\r\n// Listen for installation\r\nchrome.runtime.onInstalled.addListener(() => {\r\n  console.log('Jira Action Items Chatbot extension installed');\r\n  \r\n  // Initialize extension settings\r\n  chrome.storage.local.set({\r\n    serverUrl: API_BASE_URL,\r\n    notificationsEnabled: true,\r\n    lastSyncTime: null,\r\n    isAuthenticated: false\r\n  });\r\n  \r\n  // Start reminder checks\r\n  startReminderChecks();\r\n});\r\n\r\n// Listen for messages from content scripts or popup\r\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\r\n  if (message.type === 'API_REQUEST') {\r\n    handleApiRequest(message.endpoint, message.method, message.data)\r\n      .then(response => sendResponse({ success: true, data: response }))\r\n      .catch(error => sendResponse({ success: false, error: error.message }));\r\n    return true; // Required for async sendResponse\r\n  }\r\n  \r\n  if (message.type === 'SHOW_NOTIFICATION') {\r\n    showNotification(message.title, message.message, message.actions);\r\n    sendResponse({ success: true });\r\n    return true;\r\n  }\r\n\r\n  if (message.type === 'AUTH_LOGIN') {\r\n    initiateLogin()\r\n      .then(result => sendResponse({ success: true, data: result }))\r\n      .catch(error => sendResponse({ success: false, error: error.message }));\r\n    return true;\r\n  }\r\n\r\n  if (message.type === 'AUTH_LOGOUT') {\r\n    logout()\r\n      .then(result => sendResponse({ success: true, data: result }))\r\n      .catch(error => sendResponse({ success: false, error: error.message }));\r\n    return true;\r\n  }\r\n\r\n  if (message.type === 'AUTH_STATUS') {\r\n    checkAuthStatus()\r\n      .then(status => sendResponse({ success: true, data: status }))\r\n      .catch(error => sendResponse({ success: false, error: error.message }));\r\n    return true;\r\n  }\r\n  \r\n  if (message.type === 'CHECK_REMINDERS') {\r\n    checkReminders()\r\n      .then(result => sendResponse({ success: true, data: result }))\r\n      .catch(error => sendResponse({ success: false, error: error.message }));\r\n    return true;\r\n  }\r\n  \r\n  if (message.type === 'HANDLE_NOTIFICATION_ACTION') {\r\n    handleNotificationAction(message.notificationId, message.action, message.issueKey)\r\n      .then(result => sendResponse({ success: true, data: result }))\r\n      .catch(error => sendResponse({ success: false, error: error.message }));\r\n    return true;\r\n  }\r\n  \r\n  if (message.type === 'SEND_REPLY') {\r\n    handleConversationalReply(message.issueKey, message.message)\r\n      .then(result => sendResponse({ success: true, data: result }))\r\n      .catch(error => sendResponse({ success: false, error: error.message }));\r\n    return true;\r\n  }\r\n});\r\n\r\n// Start periodic reminder checks\r\nfunction startReminderChecks() {\r\n  console.log('Starting reminder checks...');\r\n  // Initial check\r\n  checkReminders();\r\n  \r\n  // Check for notifications at regular intervals\r\n  function schedulNextCheck() {\r\n    if (checkRemindersTimeout) {\r\n      clearTimeout(checkRemindersTimeout);\r\n    }\r\n    \r\n    checkRemindersTimeout = setTimeout(() => {\r\n      checkReminders().finally(() => {\r\n        schedulNextCheck();\r\n      });\r\n    }, NOTIFICATION_CHECK_INTERVAL);\r\n  }\r\n  \r\n  schedulNextCheck();\r\n}\r\n\r\n// Check for reminders from the server\r\nasync function checkReminders() {\r\n  try {\r\n    // First check if authenticated\r\n    const authStatus = await checkAuthStatus();\r\n    if (!authStatus.authenticated) {\r\n      console.log('Not authenticated, skipping reminder check');\r\n      return { reminders: [], count: 0 };\r\n    }\r\n    \r\n    // Get notifications enabled setting\r\n    const { notificationsEnabled } = await new Promise(resolve => {\r\n      chrome.storage.local.get('notificationsEnabled', (result) => {\r\n        resolve(result);\r\n      });\r\n    });\r\n    \r\n    if (!notificationsEnabled) {\r\n      console.log('Notifications disabled, skipping reminder check');\r\n      return { reminders: [], count: 0 };\r\n    }\r\n    \r\n    // Check for reminders\r\n    console.log('Checking for reminders...');\r\n    const result = await handleApiRequest('/api/reminders/check');\r\n    \r\n    // Update last check time\r\n    lastNotificationCheck = Date.now();\r\n    \r\n    // Process reminders\r\n    if (result.reminders && result.reminders.length > 0) {\r\n      console.log(`Found ${result.reminders.length} reminders`);\r\n      \r\n      // Queue reminders for display\r\n      notificationQueue = notificationQueue.concat(result.reminders);\r\n      \r\n      // Process the queue (one at a time)\r\n      if (!isProcessingQueue) {\r\n        processNotificationQueue();\r\n      }\r\n    } else {\r\n      console.log('No reminders found');\r\n    }\r\n    \r\n    return result;\r\n  } catch (error) {\r\n    console.error('Failed to check reminders:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Process the notification queue one at a time with delay\r\nasync function processNotificationQueue() {\r\n  if (notificationQueue.length === 0) {\r\n    isProcessingQueue = false;\r\n    return;\r\n  }\r\n  \r\n  isProcessingQueue = true;\r\n  \r\n  // Get the next reminder\r\n  const reminder = notificationQueue.shift();\r\n  \r\n  // Show notification\r\n  showReminderNotification(reminder);\r\n  \r\n  // Wait before showing the next notification\r\n  setTimeout(() => {\r\n    processNotificationQueue();\r\n  }, 5000); // 5 second delay between notifications\r\n}\r\n\r\n// Show a reminder notification\r\nfunction showReminderNotification(reminder) {\r\n  const notificationId = `reminder-${reminder.key}-${Date.now()}`;\r\n  \r\n  // Store reminder data for action handling\r\n  chrome.storage.local.set({\r\n    [notificationId]: reminder\r\n  });\r\n  \r\n  // Add Reply action if not already present\r\n  if (!reminder.actions.includes('Reply')) {\r\n    reminder.actions.push('Reply');\r\n  }\r\n  \r\n  // Create notification\r\n  chrome.notifications.create(notificationId, {\r\n    type: 'basic',\r\n    iconUrl: 'icons/icon48.png',\r\n    title: `${reminder.key}: ${reminder.title}`,\r\n    message: reminder.message,\r\n    contextMessage: `Priority: ${reminder.priority} | Status: ${reminder.status}`,\r\n    buttons: reminder.actions.slice(0, 2).map(action => ({ title: action })),\r\n    requireInteraction: true\r\n  });\r\n}\r\n\r\n// Handle notification button clicks\r\nchrome.notifications.onButtonClicked.addListener((notificationId, buttonIndex) => {\r\n  // Get the reminder data\r\n  chrome.storage.local.get(notificationId, (result) => {\r\n    if (result[notificationId]) {\r\n      const reminder = result[notificationId];\r\n      const action = reminder.actions[buttonIndex];\r\n      \r\n      // Handle action\r\n      handleNotificationAction(notificationId, action, reminder.key)\r\n        .then(() => {\r\n          // Clear notification data\r\n          chrome.storage.local.remove(notificationId);\r\n        })\r\n        .catch(error => {\r\n          console.error(`Failed to handle notification action: ${error}`);\r\n        });\r\n    }\r\n  });\r\n});\r\n\r\n// Handle a notification action\r\nasync function handleNotificationAction(notificationId, action, issueKey) {\r\n  try {\r\n    console.log(`Handling notification action: ${action} for ${issueKey}`);\r\n    \r\n    switch (action) {\r\n      case 'Done':\r\n        // Mark issue as done\r\n        await handleApiRequest('/api/reminders/mark-done', 'POST', { issue_key: issueKey });\r\n        break;\r\n      \r\n      case 'Snooze':\r\n        // Snooze issue for 1 day\r\n        await handleApiRequest('/api/reminders/snooze', 'POST', { \r\n          issue_key: issueKey,\r\n          days: 1\r\n        });\r\n        break;\r\n      \r\n      case 'View':\r\n        // Open Jira issue in new tab\r\n        const serverUrl = await getServerUrl();\r\n        const baseUrl = serverUrl.replace('/api', '');\r\n        chrome.tabs.create({ url: `${baseUrl}/browse/${issueKey}` });\r\n        break;\r\n      \r\n      case 'Reply':\r\n        // Show input popup for replying to the notification\r\n        showReplyPopup(notificationId, issueKey);\r\n        return { success: true, action }; // Early return to keep notification open\r\n    }\r\n    \r\n    // Close the notification\r\n    chrome.notifications.clear(notificationId);\r\n    \r\n    return { success: true, action };\r\n  } catch (error) {\r\n    console.error(`Failed to handle action ${action} for ${issueKey}:`, error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Show reply popup for conversational responses\r\nfunction showReplyPopup(notificationId, issueKey) {\r\n  // Create popup with input field\r\n  chrome.windows.create({\r\n    url: `popup/reply.html?id=${notificationId}&key=${issueKey}`,\r\n    type: 'popup',\r\n    width: 400,\r\n    height: 200,\r\n    focused: true\r\n  });\r\n}\r\n\r\n// Handle conversational reply\r\nasync function handleConversationalReply(issueKey, message) {\r\n  try {\r\n    console.log(`Handling conversational reply for ${issueKey}: ${message}`);\r\n    \r\n    // Send the reply to the server\r\n    const result = await handleApiRequest('/api/reminders/reply', 'POST', {\r\n      issue_key: issueKey,\r\n      message: message\r\n    });\r\n    \r\n    // Show feedback notification based on intent\r\n    const intent = result.intent || 'UNKNOWN';\r\n    \r\n    // Create an appropriate feedback message\r\n    let feedbackTitle = 'Reply Sent';\r\n    let feedbackMessage = '';\r\n    \r\n    switch (intent) {\r\n      case 'COMPLETE':\r\n        feedbackTitle = 'Task Completed';\r\n        feedbackMessage = `Task ${issueKey} has been marked as done`;\r\n        break;\r\n      \r\n      case 'SNOOZE':\r\n        feedbackTitle = 'Task Snoozed';\r\n        feedbackMessage = `Task ${issueKey} has been snoozed for ${result.days || 1} day(s)`;\r\n        break;\r\n      \r\n      case 'UPDATE':\r\n        feedbackTitle = 'Comment Added';\r\n        feedbackMessage = `Comment added to ${issueKey}`;\r\n        break;\r\n      \r\n      case 'VIEW':\r\n        feedbackTitle = 'Opening Task';\r\n        feedbackMessage = `Opening ${issueKey} for viewing`;\r\n        \r\n        // Open task in a new tab\r\n        const serverUrl = await getServerUrl();\r\n        const baseUrl = serverUrl.replace('/api', '');\r\n        chrome.tabs.create({ url: `${baseUrl}/browse/${issueKey}` });\r\n        break;\r\n      \r\n      default:\r\n        feedbackTitle = 'Reply Processed';\r\n        feedbackMessage = `Your message was added as a comment to ${issueKey}`;\r\n    }\r\n    \r\n    // Show feedback notification\r\n    chrome.notifications.create({\r\n      type: 'basic',\r\n      iconUrl: 'icons/icon48.png',\r\n      title: feedbackTitle,\r\n      message: feedbackMessage\r\n    });\r\n    \r\n    return result;\r\n  } catch (error) {\r\n    console.error(`Failed to process conversational reply for ${issueKey}:`, error);\r\n    \r\n    // Show error notification\r\n    chrome.notifications.create({\r\n      type: 'basic',\r\n      iconUrl: 'icons/icon48.png',\r\n      title: 'Error Processing Reply',\r\n      message: `Failed to process your reply: ${error.message}`\r\n    });\r\n    \r\n    throw error;\r\n  }\r\n}\r\n\r\n// Notification handling\r\nfunction showNotification(title, message, actions = []) {\r\n  chrome.notifications.create({\r\n    type: 'basic',\r\n    iconUrl: 'icons/icon48.png',\r\n    title: title,\r\n    message: message,\r\n    buttons: actions.map(action => ({ title: action })),\r\n    requireInteraction: true\r\n  });\r\n}\r\n\r\n// API request handling\r\nasync function handleApiRequest(endpoint, method = 'GET', data = null) {\r\n  const serverUrl = await getServerUrl();\r\n  const url = `${serverUrl}${endpoint}`;\r\n  \r\n  const options = {\r\n    method: method,\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    credentials: 'include' // Include cookies for cross-origin requests\r\n  };\r\n  \r\n  if (data && (method === 'POST' || method === 'PUT')) {\r\n    options.body = JSON.stringify(data);\r\n  }\r\n  \r\n  try {\r\n    const response = await fetch(url, options);\r\n    if (!response.ok) {\r\n      // If 401 Unauthorized, try to refresh auth\r\n      if (response.status === 401) {\r\n        const isRefreshed = await refreshAuth();\r\n        if (isRefreshed) {\r\n          // Retry the request after successful refresh\r\n          return handleApiRequest(endpoint, method, data);\r\n        }\r\n      }\r\n      throw new Error(`Server responded with ${response.status}: ${response.statusText}`);\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('API request failed:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Get server URL from storage\r\nasync function getServerUrl() {\r\n  return new Promise((resolve) => {\r\n    chrome.storage.local.get('serverUrl', (result) => {\r\n      resolve(result.serverUrl || API_BASE_URL);\r\n    });\r\n  });\r\n}\r\n\r\n// OAuth Authentication\r\n\r\n// Initiate the OAuth login process\r\nasync function initiateLogin() {\r\n  try {\r\n    // Generate a random state to protect against CSRF\r\n    authState = Math.random().toString(36).substring(2, 15);\r\n    \r\n    // Save state to storage for validation later\r\n    chrome.storage.local.set({ 'oauth_state': authState });\r\n    \r\n    const serverUrl = await getServerUrl();\r\n    const loginUrl = `${serverUrl}/api/auth/login`;\r\n    \r\n    // Open a new tab with the login URL\r\n    chrome.tabs.create({ url: loginUrl });\r\n    \r\n    return { message: 'Login initiated' };\r\n  } catch (error) {\r\n    console.error('Failed to initiate login:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Logout the user\r\nasync function logout() {\r\n  try {\r\n    const serverUrl = await getServerUrl();\r\n    const logoutUrl = `${serverUrl}/api/auth/logout`;\r\n    \r\n    // Call the logout API\r\n    await fetch(logoutUrl, { \r\n      method: 'GET',\r\n      credentials: 'include' // Include cookies\r\n    });\r\n    \r\n    // Update local storage auth status\r\n    chrome.storage.local.set({ isAuthenticated: false });\r\n    \r\n    return { message: 'Logged out successfully' };\r\n  } catch (error) {\r\n    console.error('Failed to logout:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Check if the user is authenticated\r\nasync function checkAuthStatus() {\r\n  try {\r\n    const serverUrl = await getServerUrl();\r\n    const statusUrl = `${serverUrl}/api/auth/status`;\r\n    \r\n    // Call the status API\r\n    const response = await fetch(statusUrl, { \r\n      method: 'GET',\r\n      credentials: 'include' // Include cookies\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`Server responded with ${response.status}: ${response.statusText}`);\r\n    }\r\n    \r\n    const status = await response.json();\r\n    \r\n    // Update local storage auth status\r\n    chrome.storage.local.set({ isAuthenticated: status.authenticated });\r\n    \r\n    return status;\r\n  } catch (error) {\r\n    console.error('Failed to check auth status:', error);\r\n    // In case of error, assume not authenticated\r\n    chrome.storage.local.set({ isAuthenticated: false });\r\n    return { authenticated: false, error: error.message };\r\n  }\r\n}\r\n\r\n// Refresh the auth token\r\nasync function refreshAuth() {\r\n  try {\r\n    const serverUrl = await getServerUrl();\r\n    const refreshUrl = `${serverUrl}/api/auth/refresh-token`;\r\n    \r\n    // Call the refresh token API\r\n    const response = await fetch(refreshUrl, { \r\n      method: 'POST',\r\n      credentials: 'include' // Include cookies\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`Server responded with ${response.status}: ${response.statusText}`);\r\n    }\r\n    \r\n    const result = await response.json();\r\n    return result.success;\r\n  } catch (error) {\r\n    console.error('Failed to refresh auth token:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// Check auth status when extension loads\r\ncheckAuthStatus().then(status => {\r\n  console.log('Initial auth status:', status.authenticated ? 'Authenticated' : 'Not authenticated');\r\n});"],"names":["_regeneratorRuntime","r","t","e","Object","prototype","n","hasOwnProperty","o","Symbol","i","iterator","a","asyncIterator","u","toStringTag","c","defineProperty","value","enumerable","configurable","writable","h","Generator","create","Error","done","method","arg","delegate","d","f","sent","_sent","dispatchException","abrupt","s","type","Context","call","wrap","GeneratorFunction","GeneratorFunctionPrototype","l","p","getPrototypeOf","y","x","v","g","forEach","_invoke","AsyncIterator","_typeof","resolve","__await","then","TypeError","next","w","tryEntries","push","m","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","unshift","pop","values","prev","charAt","slice","stop","rval","complete","finish","_catch","delegateYield","_defineProperty","_toPropertyKey","_toPrimitive","toPrimitive","String","Number","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","API_BASE_URL","authState","lastNotificationCheck","NOTIFICATION_CHECK_INTERVAL","notificationQueue","isProcessingQueue","checkRemindersTimeout","chrome","runtime","onInstalled","addListener","console","log","storage","local","set","serverUrl","notificationsEnabled","lastSyncTime","isAuthenticated","startReminderChecks","onMessage","message","sender","sendResponse","handleApiRequest","endpoint","data","response","success","error","showNotification","title","actions","initiateLogin","result","logout","checkAuthStatus","status","checkReminders","handleNotificationAction","notificationId","action","issueKey","handleConversationalReply","schedulNextCheck","clearTimeout","setTimeout","_checkReminders","_callee","authStatus","_yield$Promise","_callee$","_context","authenticated","reminders","count","get","Date","now","concat","processNotificationQueue","t0","_processNotificationQueue","_callee2","reminder","_callee2$","_context2","shift","showReminderNotification","key","includes","notifications","iconUrl","contextMessage","priority","buttons","map","requireInteraction","onButtonClicked","buttonIndex","remove","_x","_x2","_x3","_handleNotificationAction","_callee3","baseUrl","_callee3$","_context3","issue_key","days","getServerUrl","replace","tabs","url","showReplyPopup","clear","t1","windows","width","height","focused","_x4","_x5","_handleConversationalReply","_callee4","intent","feedbackTitle","feedbackMessage","_callee4$","_context4","undefined","_x6","_handleApiRequest","_callee5","options","isRefreshed","_args5","_callee5$","_context5","headers","credentials","body","JSON","stringify","fetch","ok","refreshAuth","statusText","json","_getServerUrl","_callee6","_callee6$","_context6","_initiateLogin","_callee7","loginUrl","_callee7$","_context7","Math","random","toString","substring","_logout","_callee8","logoutUrl","_callee8$","_context8","_checkAuthStatus","_callee9","statusUrl","_callee9$","_context9","_refreshAuth","_callee0","refreshUrl","_callee0$","_context0"],"sourceRoot":""}