{"version":3,"file":"popup.js","mappings":"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","sources":["webpack://jira-action-items-chatbot/./popup/popup.js"],"sourcesContent":["/**\r\n * Popup script for the Jira Action Items Chatbot extension\r\n * Handles the popup UI and communication with the background script\r\n */\r\n\r\n// DOM Elements\r\nconst chatMessages = document.getElementById('chat-messages');\r\nconst userInput = document.getElementById('user-input');\r\nconst sendButton = document.getElementById('send-button');\r\nconst attachButton = document.getElementById('attach-button');\r\nconst statusCircle = document.getElementById('status-circle');\r\nconst statusText = document.getElementById('status-text');\r\nconst tabChat = document.getElementById('tab-chat');\r\nconst tabTasks = document.getElementById('tab-tasks');\r\nconst tabReminders = document.getElementById('tab-reminders');\r\nconst tabSettings = document.getElementById('tab-settings');\r\nconst tasksContent = document.getElementById('tasks-content');\r\nconst remindersContent = document.getElementById('reminders-content');\r\nconst settingsContent = document.getElementById('settings-content');\r\nconst serverUrlInput = document.getElementById('server-url');\r\nconst notificationsToggle = document.getElementById('notifications-toggle');\r\nconst reminderToggle = document.getElementById('reminder-toggle');\r\nconst checkRemindersButton = document.getElementById('check-reminders-button');\r\nconst testReminderButton = document.getElementById('test-reminder-button');\r\nconst remindersList = document.getElementById('reminders-list');\r\nconst saveSettingsButton = document.getElementById('save-settings');\r\nconst taskList = document.getElementById('task-list');\r\n\r\n// Chat history\r\nlet chatHistory = [];\r\n\r\n// Auth state\r\nlet isAuthenticated = false;\r\nlet currentUser = null;\r\n\r\n// Server settings\r\nlet serverSettings = {\r\n  DEFAULT_JIRA_PROJECT_KEY: 'JCAI', // Default fallback\r\n  JIRA_URL: 'https://your-domain.atlassian.net'\r\n};\r\n\r\n// Input suggestions based on context\r\nconst inputSuggestions = {\r\n  default: [\r\n    \"Create a task for me to review the documentation by Friday\",\r\n    \"List my open tasks with high priority\",\r\n    \"Remind me to follow up with the team tomorrow at 9 AM\",\r\n    \"Schedule a meeting for next week\",\r\n    \"Upload evidence for task PROJ-123\"\r\n  ],\r\n  jiraIssue: [\r\n    \"Add a comment to this issue\",\r\n    \"Change status to 'In Progress'\",\r\n    \"Add me as a watcher\",\r\n    \"Set due date to next Friday\",\r\n    \"Assign this to John\"\r\n  ],\r\n  jiraBoard: [\r\n    \"Show tasks assigned to me\",\r\n    \"Create a new epic for the Q3 deliverables\",\r\n    \"List blocked tasks in this project\",\r\n    \"Find tasks without assignees\",\r\n    \"Show tasks due this week\"\r\n  ]\r\n};\r\n\r\n// Active context type\r\nlet activeContextType = 'default';\r\nlet currentJiraContext = {};\r\n\r\n// Initialize the popup\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  // Add diagnostic console log\r\n  console.log('Popup initialized', {\r\n    chatMessages: !!chatMessages,\r\n    userInput: !!userInput,\r\n    sendButton: !!sendButton,\r\n    serverUrlInput: serverUrlInput ? serverUrlInput.value : null\r\n  });\r\n  \r\n  // Load settings from storage\r\n  loadSettings();\r\n  \r\n  // Check server connection\r\n  checkServerConnection();\r\n  \r\n  // Check authentication status\r\n  checkAuthStatus();\r\n  \r\n  // Load server settings\r\n  loadServerSettings();\r\n  \r\n  // Load chat history\r\n  loadChatHistory();\r\n  \r\n  // Get current context and update suggestions\r\n  updateJiraContext();\r\n  \r\n  // Add welcome message if this is first time\r\n  chrome.storage.local.get('firstOpen', (data) => {\r\n    if (data.firstOpen !== false) {\r\n      // First time opening the extension\r\n      chrome.storage.local.set({ firstOpen: false });\r\n      addMessage('bot', 'Welcome to Jira Action Items Chatbot! How can I help you today?');\r\n      \r\n      // Show sample commands\r\n      setTimeout(() => {\r\n        addMessage('bot', 'You can ask me to do things like:<br>' +\r\n          '• Create tasks in Jira<br>' +\r\n          '• Set reminders for due dates<br>' +\r\n          '• Update task status<br>' +\r\n          '• Find tasks assigned to you<br>' +\r\n          '<br>Try typing a command or click a suggestion below.');\r\n        \r\n        // Show initial suggestions\r\n        showSuggestions();\r\n      }, 1000);\r\n    }\r\n  });\r\n\r\n  // Set up event listeners\r\n  setupEventListeners();\r\n});\r\n\r\n// Load settings from storage\r\nfunction loadSettings() {\r\n  chrome.storage.local.get(['serverUrl', 'notificationsEnabled', 'isAuthenticated', 'serverSettings'], (data) => {\r\n    if (data.serverUrl) {\r\n      serverUrlInput.value = data.serverUrl;\r\n    }\r\n    \r\n    if (data.notificationsEnabled !== undefined) {\r\n      notificationsToggle.checked = data.notificationsEnabled;\r\n      reminderToggle.checked = data.notificationsEnabled;\r\n    }\r\n    \r\n    isAuthenticated = data.isAuthenticated || false;\r\n    \r\n    // Load server settings if available\r\n    if (data.serverSettings) {\r\n      serverSettings = {...serverSettings, ...data.serverSettings};\r\n    }\r\n  });\r\n}\r\n\r\n// Load server settings from the server\r\nfunction loadServerSettings() {\r\n  chrome.runtime.sendMessage({\r\n    type: 'API_REQUEST',\r\n    endpoint: '/api/settings',\r\n    method: 'GET'\r\n  }, (response) => {\r\n    if (response.success && response.data.settings) {\r\n      // Store in local variable\r\n      serverSettings = {...serverSettings, ...response.data.settings};\r\n      \r\n      // Store in chrome storage\r\n      chrome.storage.local.set({\r\n        serverSettings: response.data.settings\r\n      });\r\n      \r\n      console.log('Server settings loaded', serverSettings);\r\n    }\r\n  });\r\n}\r\n\r\n// Check authentication status\r\nfunction checkAuthStatus() {\r\n  chrome.runtime.sendMessage({ type: 'AUTH_STATUS' }, (response) => {\r\n    if (response.success) {\r\n      isAuthenticated = response.data.authenticated;\r\n      currentUser = response.data.user;\r\n      updateAuthUI();\r\n    } else {\r\n      console.error('Failed to check authentication status:', response.error);\r\n      isAuthenticated = false;\r\n      updateAuthUI();\r\n    }\r\n  });\r\n}\r\n\r\n// Update UI based on authentication status\r\nfunction updateAuthUI() {\r\n  // Add Auth UI to settings tab if it doesn't exist\r\n  if (!document.getElementById('auth-settings')) {\r\n    const authGroup = document.createElement('div');\r\n    authGroup.id = 'auth-settings';\r\n    authGroup.className = 'settings-group auth-settings';\r\n    authGroup.innerHTML = `\r\n      <label>Authentication</label>\r\n      <div id=\"auth-status\" class=\"auth-status\"></div>\r\n      <div id=\"auth-buttons\" class=\"auth-buttons\"></div>\r\n    `;\r\n    \r\n    // Insert before save button\r\n    const saveGroup = document.querySelector('.settings-group:last-child');\r\n    settingsContent.insertBefore(authGroup, saveGroup);\r\n  }\r\n  \r\n  // Update auth status display\r\n  const authStatus = document.getElementById('auth-status');\r\n  const authButtons = document.getElementById('auth-buttons');\r\n  \r\n  if (isAuthenticated && currentUser) {\r\n    authStatus.innerHTML = `\r\n      <div class=\"user-info\">\r\n        <span class=\"status-circle connected\"></span>\r\n        <span>Logged in as: <strong>${currentUser.name || currentUser.email || currentUser.account_id}</strong></span>\r\n      </div>\r\n    `;\r\n    \r\n    authButtons.innerHTML = `\r\n      <button id=\"logout-button\" class=\"secondary-button\">Log Out</button>\r\n    `;\r\n    \r\n    // Add logout event listener\r\n    document.getElementById('logout-button').addEventListener('click', handleLogout);\r\n  } else {\r\n    authStatus.innerHTML = `\r\n      <div class=\"user-info\">\r\n        <span class=\"status-circle disconnected\"></span>\r\n        <span>Not logged in</span>\r\n      </div>\r\n    `;\r\n    \r\n    authButtons.innerHTML = `\r\n      <button id=\"login-button\" class=\"primary-button\">Log In with Jira</button>\r\n    `;\r\n    \r\n    // Add login event listener\r\n    document.getElementById('login-button').addEventListener('click', handleLogin);\r\n  }\r\n}\r\n\r\n// Handle login button click\r\nfunction handleLogin() {\r\n  chrome.runtime.sendMessage({ type: 'AUTH_LOGIN' }, (response) => {\r\n    if (!response.success) {\r\n      console.error('Failed to initiate login:', response.error);\r\n      // Show error in UI\r\n      addMessage('bot', 'Failed to log in. Please try again later.');\r\n    }\r\n  });\r\n}\r\n\r\n// Handle logout button click\r\nfunction handleLogout() {\r\n  chrome.runtime.sendMessage({ type: 'AUTH_LOGOUT' }, (response) => {\r\n    if (response.success) {\r\n      isAuthenticated = false;\r\n      currentUser = null;\r\n      updateAuthUI();\r\n      // Show logout message\r\n      addMessage('bot', 'You have been logged out successfully.');\r\n    } else {\r\n      console.error('Failed to logout:', response.error);\r\n      // Show error in UI\r\n      addMessage('bot', 'Failed to log out. Please try again later.');\r\n    }\r\n  });\r\n}\r\n\r\n// Check if server is available\r\nfunction checkServerConnection() {\r\n  chrome.storage.local.get('serverUrl', (data) => {\r\n    const serverUrl = data.serverUrl || 'http://localhost:8000';\r\n    \r\n    fetch(`${serverUrl}/api/health`, { method: 'GET' })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          setStatus('connected');\r\n        } else {\r\n          setStatus('error');\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setStatus('disconnected');\r\n      });\r\n  });\r\n}\r\n\r\n// Set connection status display\r\nfunction setStatus(status) {\r\n  statusCircle.className = 'status-circle';\r\n  \r\n  switch (status) {\r\n    case 'connected':\r\n      statusCircle.classList.add('connected');\r\n      statusText.textContent = 'Connected';\r\n      break;\r\n    case 'disconnected':\r\n      statusCircle.classList.add('disconnected');\r\n      statusText.textContent = 'Disconnected';\r\n      break;\r\n    case 'error':\r\n      statusCircle.classList.add('error');\r\n      statusText.textContent = 'Error';\r\n      break;\r\n    default:\r\n      statusCircle.classList.add('connecting');\r\n      statusText.textContent = 'Connecting...';\r\n  }\r\n}\r\n\r\n// Load chat history from storage\r\nfunction loadChatHistory() {\r\n  chrome.storage.local.get('chatHistory', (data) => {\r\n    if (data.chatHistory && data.chatHistory.length > 0) {\r\n      chatHistory = data.chatHistory;\r\n      \r\n      // Display last 10 messages\r\n      const recentMessages = chatHistory.slice(-10);\r\n      recentMessages.forEach(msg => {\r\n        addMessageToUI(msg.sender, msg.text, msg.timestamp);\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\n// Function to handle chat response from the server\r\nfunction handleChatResponse(data, typingIndicator) {\r\n  // Log the response for debugging\r\n  console.log('Received response:', data);\r\n\r\n  // Remove typing indicator or update it\r\n  if (typingIndicator) {\r\n    // If response was successful, update the typing indicator with the response text\r\n    if (data && data.response) {\r\n      // Make sure the typing indicator is properly updated with the response text\r\n      updateMessage(typingIndicator, data.response);\r\n      \r\n      // Handle any actions (buttons) if provided\r\n      if (data.actions && Array.isArray(data.actions) && data.actions.length > 0) {\r\n        handleActions(data.actions);\r\n      }\r\n    } else {\r\n      // If no valid response, show error\r\n      updateMessage(typingIndicator, \"Sorry, I received an empty response. Please try again.\");\r\n    }\r\n  } else {\r\n    // If no typing indicator was provided, add a new message\r\n    if (data && data.response) {\r\n      addMessage('bot', data.response);\r\n      \r\n      // Handle any actions (buttons) if provided\r\n      if (data.actions && Array.isArray(data.actions) && data.actions.length > 0) {\r\n        handleActions(data.actions);\r\n      }\r\n    } else {\r\n      // If no valid response, show error\r\n      addMessage('bot', \"Sorry, I received an empty response. Please try again.\");\r\n    }\r\n  }\r\n}\r\n\r\n// Add chat message to history and UI\r\nfunction addMessage(sender, text) {\r\n  const timestamp = new Date().toISOString();\r\n  \r\n  // Add to chat history\r\n  chatHistory.push({ sender, text, timestamp });\r\n  \r\n  // Save to storage (limited to last 50 messages to save space)\r\n  if (chatHistory.length > 50) {\r\n    chatHistory = chatHistory.slice(-50);\r\n  }\r\n  chrome.storage.local.set({ chatHistory });\r\n  \r\n  // Add to UI\r\n  addMessageToUI(sender, text, timestamp);\r\n  \r\n  // If bot message, show suggestions after a brief delay\r\n  if (sender === 'bot') {\r\n    setTimeout(() => {\r\n      showSuggestions();\r\n    }, 500);\r\n  }\r\n}\r\n\r\n// Add message to UI\r\nfunction addMessageToUI(sender, text, timestamp) {\r\n  const messageDiv = document.createElement('div');\r\n  messageDiv.className = `message ${sender}-message`;\r\n  \r\n  const time = new Date(timestamp);\r\n  const formattedTime = `${time.getHours().toString().padStart(2, '0')}:${time.getMinutes().toString().padStart(2, '0')}`;\r\n  \r\n  messageDiv.innerHTML = `\r\n    <div class=\"message-content\">${text}</div>\r\n    <div class=\"message-time\">${formattedTime}</div>\r\n  `;\r\n  \r\n  chatMessages.appendChild(messageDiv);\r\n  \r\n  // Scroll to bottom\r\n  chatMessages.scrollTop = chatMessages.scrollHeight;\r\n}\r\n\r\n// Update Jira context and suggestions based on current tab\r\nfunction updateJiraContext() {\r\n  getCurrentTabInfo().then(tabInfo => {\r\n    currentJiraContext = tabInfo;\r\n    \r\n    // Determine context type\r\n    if (tabInfo.issueKey) {\r\n      activeContextType = 'jiraIssue';\r\n      userInput.placeholder = `Ask about ${tabInfo.issueKey}...`;\r\n    } else if (tabInfo.isJiraPage) {\r\n      activeContextType = 'jiraBoard';\r\n      userInput.placeholder = 'Ask about Jira board or project...';\r\n    } else {\r\n      activeContextType = 'default';\r\n      userInput.placeholder = 'Type your message here... (e.g., \"Create a task for John to review docs by Monday\")';\r\n    }\r\n    \r\n    // Update suggestions\r\n    showSuggestions();\r\n  });\r\n}\r\n\r\n// Show context-aware suggestions\r\nfunction showSuggestions() {\r\n  // Remove existing suggestions\r\n  const existingSuggestions = document.getElementById('chat-suggestions');\r\n  if (existingSuggestions) {\r\n    existingSuggestions.remove();\r\n  }\r\n  \r\n  // If not authenticated and not in settings tab, show login suggestion\r\n  if (!isAuthenticated && !document.getElementById('tab-settings').classList.contains('active')) {\r\n    const loginButton = document.createElement('button');\r\n    loginButton.className = 'suggestion-button login-suggestion';\r\n    loginButton.textContent = 'Log in with Jira to get started';\r\n    loginButton.onclick = () => {\r\n      switchTab(tabSettings);\r\n      setTimeout(() => {\r\n        const loginBtn = document.getElementById('login-button');\r\n        if (loginBtn) loginBtn.focus();\r\n      }, 100);\r\n    };\r\n    \r\n    suggestionsDiv.appendChild(loginButton);\r\n    chatMessages.parentNode.insertBefore(suggestionsDiv, document.querySelector('.input-container'));\r\n    return;\r\n  }\r\n  \r\n  // Get relevant suggestions\r\n  const suggestions = inputSuggestions[activeContextType] || inputSuggestions.default;\r\n  \r\n  // Create buttons for each suggestion\r\n  suggestions.slice(0, 3).forEach(suggestion => {\r\n    const button = document.createElement('button');\r\n    button.className = 'suggestion-button';\r\n    button.textContent = suggestion;\r\n    button.onclick = () => {\r\n      userInput.value = suggestion;\r\n      sendMessage();\r\n    };\r\n    \r\n    suggestionsDiv.appendChild(button);\r\n  });\r\n  \r\n  // Append suggestions to UI\r\n  if (suggestions.length > 0) {\r\n    chatMessages.parentNode.insertBefore(suggestionsDiv, document.querySelector('.input-container'));\r\n  }\r\n}\r\n\r\n// Set up event listeners\r\nfunction setupEventListeners() {\r\n  // Send button\r\n  sendButton.addEventListener('click', sendMessage);\r\n  \r\n  // User input\r\n  userInput.addEventListener('keydown', (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      sendMessage();\r\n    }\r\n  });\r\n  \r\n  // User input for suggestions\r\n  userInput.addEventListener('input', smartSuggestions);\r\n  \r\n  // Attach button\r\n  attachButton.addEventListener('click', handleAttachment);\r\n  \r\n  // Tab buttons\r\n  tabChat.addEventListener('click', () => switchTab(tabChat));\r\n  tabTasks.addEventListener('click', () => switchTab(tabTasks));\r\n  tabReminders.addEventListener('click', () => switchTab(tabReminders));\r\n  tabSettings.addEventListener('click', () => switchTab(tabSettings));\r\n  \r\n  // Reminder buttons\r\n  checkRemindersButton.addEventListener('click', handleCheckReminders);\r\n  testReminderButton.addEventListener('click', handleTestReminder);\r\n  reminderToggle.addEventListener('change', saveReminderSettings);\r\n  \r\n  // Save settings button\r\n  saveSettingsButton.addEventListener('click', saveSettings);\r\n}\r\n\r\n// Show smarter suggestions based on partial typing\r\nfunction smartSuggestions() {\r\n  const input = userInput.value.toLowerCase();\r\n  if (input.length < 3) return;\r\n  \r\n  // Get relevant suggestions\r\n  const suggestions = inputSuggestions[activeContextType] || inputSuggestions.default;\r\n  \r\n  // Filter suggestions that partially match input\r\n  const matchingSuggestions = suggestions.filter(\r\n    suggestion => suggestion.toLowerCase().includes(input)\r\n  );\r\n  \r\n  // Show up to 3 matching suggestions\r\n  if (matchingSuggestions.length > 0) {\r\n    // Remove existing suggestions\r\n    const existingSuggestions = document.getElementById('chat-suggestions');\r\n    if (existingSuggestions) {\r\n      existingSuggestions.remove();\r\n    }\r\n    \r\n    // Create suggestions container\r\n    const suggestionsDiv = document.createElement('div');\r\n    suggestionsDiv.id = 'chat-suggestions';\r\n    suggestionsDiv.className = 'chat-suggestions';\r\n    \r\n    // Create buttons for each suggestion\r\n    matchingSuggestions.slice(0, 3).forEach(suggestion => {\r\n      const button = document.createElement('button');\r\n      button.className = 'suggestion-button';\r\n      button.textContent = suggestion;\r\n      button.onclick = () => {\r\n        userInput.value = suggestion;\r\n        sendMessage();\r\n      };\r\n      \r\n      suggestionsDiv.appendChild(button);\r\n    });\r\n    \r\n    // Append suggestions to UI\r\n    chatMessages.parentNode.insertBefore(suggestionsDiv, document.querySelector('.input-container'));\r\n  }\r\n}\r\n\r\n// Switch between tabs\r\nfunction switchTab(tab) {\r\n  // Remove active class from all tabs\r\n  [tabChat, tabTasks, tabReminders, tabSettings].forEach(t => t.classList.remove('active'));\r\n  \r\n  // Add active class to selected tab\r\n  tab.classList.add('active');\r\n  \r\n  // Hide all content\r\n  chatMessages.parentNode.style.display = 'none';\r\n  tasksContent.style.display = 'none';\r\n  remindersContent.style.display = 'none';\r\n  settingsContent.style.display = 'none';\r\n  \r\n  // Show content based on selected tab\r\n  if (tab === tabChat) {\r\n    chatMessages.parentNode.style.display = 'flex';\r\n    showSuggestions();\r\n  } else if (tab === tabTasks) {\r\n      tasksContent.style.display = 'block';\r\n    loadTasks();\r\n  } else if (tab === tabReminders) {\r\n    remindersContent.style.display = 'block';\r\n    loadRecentReminders();\r\n  } else if (tab === tabSettings) {\r\n      settingsContent.style.display = 'block';\r\n    updateAuthUI();\r\n  }\r\n}\r\n\r\n// Send message to API\r\nasync function sendMessage() {\r\n  const message = userInput.value.trim();\r\n  if (!message) return;\r\n  \r\n  // Clear input\r\n  userInput.value = '';\r\n  \r\n  // Remove suggestions\r\n  const existingSuggestions = document.getElementById('chat-suggestions');\r\n  if (existingSuggestions) {\r\n    existingSuggestions.remove();\r\n  }\r\n  \r\n  // Add user message to UI\r\n  addMessage('user', message);\r\n  \r\n  // Add typing indicator\r\n  const typingIndicator = document.createElement('div');\r\n  typingIndicator.className = 'message bot-message typing-indicator';\r\n  typingIndicator.innerHTML = '<div class=\"message-content\"><div class=\"dots\"><span>.</span><span>.</span><span>.</span></div></div>';\r\n  chatMessages.appendChild(typingIndicator);\r\n  chatMessages.scrollTop = chatMessages.scrollHeight;\r\n  \r\n  // Check if authenticated\r\n  if (!isAuthenticated) {\r\n    // Remove typing indicator\r\n    typingIndicator.remove();\r\n    \r\n    // Add response about authentication\r\n    addMessage('bot', 'Please log in with Jira to use the chatbot. Go to the Settings tab to log in.');\r\n    return;\r\n  }\r\n\r\n  // Check if this is a Jira issue creation request (pattern matching before sending to API)\r\n  let isJiraCreationRequest = /create.*task|create.*issue|add.*task|add.*issue|new.*task|new.*issue/i.test(message.toLowerCase());\r\n  \r\n  try {\r\n    // Prepare message with context\r\n    const messageData = {\r\n      text: message,\r\n      context: currentJiraContext\r\n    };\r\n\r\n    // If it appears to be a Jira creation request, check if we have enough information\r\n    if (isJiraCreationRequest && !message.includes(\"project key\")) {\r\n      // First check if we can extract key details\r\n      const summaryMatch = message.match(/summary.*?[:\"']([^\"']+)[:\"']/i) || \r\n                         message.match(/title.*?[:\"']([^\"']+)[:\"']/i);\r\n      const descriptionMatch = message.match(/description.*?[:\"']([^\"']+)[:\"']/i) ||\r\n                              message.match(/details.*?[:\"']([^\"']+)[:\"']/i);\r\n\r\n      // If we don't have at least a summary, ask for complete information\r\n      if (!summaryMatch) {\r\n        // Remove typing indicator\r\n        typingIndicator.remove();\r\n\r\n        // Provide a template response for creating Jira issues\r\n        const projectKey = serverSettings.DEFAULT_JIRA_PROJECT_KEY || \"JCAI\";\r\n        const templateResponse = `To create a Jira issue, I need some details. You can provide them all at once like this:\r\n\r\nPlease create a Jira issue with:\r\n- Summary: [Issue title]\r\n- Description: [Detailed description]\r\n- Priority: [High, Medium, or Low]\r\n- Due date: [Optional date]\r\n\r\nI'll use the default project key \"${projectKey}\" unless you specify another one.`;\r\n\r\n        addMessage('bot', templateResponse);\r\n        return;\r\n      }\r\n    }\r\n    \r\n    // Get the user's email from storage if available\r\n    chrome.storage.local.get(['userEmail', 'userId'], function(result) {\r\n      const userEmail = result.userEmail || '';\r\n      const userId = result.userId || '';\r\n      \r\n      // Prepare the request\r\n      const requestData = {\r\n        text: message,\r\n        history: chatHistory,\r\n        user_id: userId || userEmail  // Add the user ID or email for OAuth authentication\r\n      };\r\n      \r\n      // Log the request for debugging\r\n      console.log('Sending message to server:', requestData);\r\n      \r\n      // Get server URL from input value\r\n      const serverUrl = serverUrlInput.value || 'http://localhost:8000';\r\n      \r\n      // Send the request\r\n      fetch(serverUrl + '/api/chat', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(requestData),\r\n      })\r\n        .then(response => {\r\n          // Check for network errors\r\n          if (!response.ok) {\r\n            throw new Error(`Server error: ${response.status} ${response.statusText}`);\r\n          }\r\n          return response.json();\r\n        })\r\n        .then(data => {\r\n          console.log('Response received from server:', data);\r\n          // Handle the response\r\n          handleChatResponse(data, typingIndicator);\r\n        })\r\n        .catch(error => {\r\n          // Handle errors\r\n          console.error('Error:', error);\r\n          updateMessage(typingIndicator, `<p>Error: ${error.message}</p>`);\r\n        });\r\n    });\r\n  } catch (error) {\r\n    // Remove typing indicator\r\n    typingIndicator.remove();\r\n    \r\n    // Add error message to UI\r\n    addMessage('bot', `Sorry, something went wrong. ${error.message}`);\r\n    console.error('Error sending message:', error);\r\n  }\r\n}\r\n\r\n// Get info about current tab\r\nasync function getCurrentTabInfo() {\r\n  return new Promise((resolve) => {\r\n    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\r\n      if (tabs.length === 0) {\r\n        resolve({ isJiraPage: false });\r\n        return;\r\n      }\r\n      \r\n      const url = tabs[0].url;\r\n      const title = tabs[0].title;\r\n      \r\n      // Check if this is a Jira page\r\n      const isJiraPage = url.includes('atlassian.net') || url.includes('jira');\r\n      \r\n      // Extract issue key if present in URL or title\r\n      const issueKeyRegex = /\\b([A-Z]+-[0-9]+)\\b/;\r\n      const urlMatch = url.match(issueKeyRegex);\r\n      const titleMatch = title.match(issueKeyRegex);\r\n      const issueKey = urlMatch ? urlMatch[1] : (titleMatch ? titleMatch[1] : null);\r\n      \r\n      // Extract project key if found\r\n      const projectKeyRegex = /projects\\/([A-Z]+)/;\r\n      const projectMatch = url.match(projectKeyRegex);\r\n      const projectKey = projectMatch ? projectMatch[1] : null;\r\n      \r\n            resolve({\r\n        isJiraPage,\r\n        issueKey,\r\n        projectKey,\r\n        url,\r\n        title\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\n// Handle suggested actions\r\nfunction handleActions(actions) {\r\n  if (!actions || !Array.isArray(actions) || actions.length === 0) {\r\n    return;\r\n  }\r\n  \r\n  // Create action buttons container\r\n  const actionsDiv = document.createElement('div');\r\n  actionsDiv.className = 'message-actions';\r\n  \r\n  // Add action buttons\r\n  actions.forEach(action => {\r\n    // Create the button\r\n    const button = document.createElement('button');\r\n    button.className = 'action-button';\r\n    button.textContent = action.text;\r\n    \r\n    // Add click handler based on action type\r\n    if (action.url) {\r\n      // External URL action\r\n      button.addEventListener('click', () => {\r\n        chrome.tabs.create({ url: action.url });\r\n      });\r\n    } else if (action.action === 'create_task') {\r\n      // Create task action\r\n      button.addEventListener('click', () => {\r\n        // Normalize between title and summary\r\n        const entities = action.params || {};\r\n        if (entities.title && !entities.summary) {\r\n          entities.summary = entities.title;\r\n        } else if (entities.summary && !entities.title) {\r\n          entities.title = entities.summary;\r\n        }\r\n        \r\n        // Extract all available fields\r\n        const taskData = {\r\n          project_key: entities.project_key || serverSettings.DEFAULT_JIRA_PROJECT_KEY,\r\n          summary: entities.summary || entities.title || \"Task created via chatbot\",\r\n          description: entities.description || \"\",\r\n          issue_type: entities.issue_type || \"Task\",\r\n          priority: entities.priority || \"Medium\"\r\n        };\r\n        \r\n        // Add optional fields if present\r\n        if (entities.assignee) taskData.assignee = entities.assignee;\r\n        if (entities.due_date) taskData.due_date = entities.due_date;\r\n        if (entities.labels) taskData.labels = entities.labels;\r\n        \r\n        // Call the create function\r\n        createJiraIssue(taskData);\r\n      });\r\n    } else if (action.action === 'transition') {\r\n      // Transition task action\r\n      button.addEventListener('click', () => {\r\n        chrome.runtime.sendMessage({\r\n          type: 'API_REQUEST',\r\n          endpoint: `/api/jira/tasks/${action.params.task_id}/transition`,\r\n          method: 'POST',\r\n          data: {\r\n            id: action.params.transition_id\r\n          }\r\n        }, (response) => {\r\n          if (response.success) {\r\n            addMessage('bot', `✅ Successfully moved ${action.params.task_id} to ${action.params.transition_name}`);\r\n          } else {\r\n            addMessage('bot', `❌ Failed to update status: ${response.error || \"Unknown error\"}`);\r\n          }\r\n        });\r\n      });\r\n    } else {\r\n      // Generic action (handled by extension)\r\n      button.addEventListener('click', () => {\r\n        // Pass action to handler function\r\n        chrome.runtime.sendMessage({\r\n          type: 'HANDLE_ACTION',\r\n          action: action.action,\r\n          params: action.params\r\n        }, (response) => {\r\n          if (response && response.message) {\r\n            addMessage('bot', response.message);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    \r\n    // Add button to container\r\n    actionsDiv.appendChild(button);\r\n  });\r\n  \r\n  // Append actions to UI\r\n  chatMessages.appendChild(actionsDiv);\r\n  \r\n  // Scroll to bottom\r\n  chatMessages.scrollTop = chatMessages.scrollHeight;\r\n}\r\n\r\n// Create a Jira issue based on extracted entities\r\nfunction createJiraIssue(entities) {\r\n  // Create a new message element for response\r\n  const loadingMessageElement = document.createElement('div');\r\n  loadingMessageElement.className = 'message bot-message';\r\n  loadingMessageElement.innerHTML = '<div class=\"message-content\">Creating Jira issue...</div>';\r\n  chatMessages.appendChild(loadingMessageElement);\r\n\r\n  // Scroll to bottom\r\n  chatMessages.scrollTop = chatMessages.scrollHeight;\r\n  \r\n  // Use default project key if not specified\r\n  const projectKey = entities.project_key || serverSettings?.DEFAULT_JIRA_PROJECT_KEY || 'JCAI';\r\n  \r\n  // Ensure required fields are present\r\n  if (!entities.summary && !entities.title) {\r\n    updateMessage(loadingMessageElement, '❌ Error: Summary/Title is required to create a Jira issue.');\r\n    return;\r\n  }\r\n  \r\n  // Get the user's email from storage if available\r\n  chrome.storage.local.get(['userEmail', 'userId'], function(result) {\r\n    const userEmail = result.userEmail || '';\r\n    const userId = result.userId || '';\r\n    \r\n    // Add user info to entities for OAuth authentication\r\n    entities.user_id = userId || userEmail;\r\n    \r\n    // Normalize title/summary\r\n    if (!entities.summary && entities.title) {\r\n      entities.summary = entities.title;\r\n    } else if (!entities.title && entities.summary) {\r\n      entities.title = entities.summary;\r\n    }\r\n    \r\n    // Ensure project key is set\r\n    entities.project_key = projectKey;\r\n    \r\n    console.log('Creating Jira issue with entities:', entities);\r\n    \r\n    // Send the request\r\n    fetch(`${serverUrl}/api/jira/tasks`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(entities),\r\n    })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          return response.json().then(data => {\r\n            throw new Error(data.message || `Server error: ${response.status}`);\r\n          });\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        // Handle success response\r\n        if (data.success && data.key) {\r\n          const issueLink = `${jiraBaseUrl || 'https://your-jira-instance.atlassian.net'}/browse/${data.key}`;\r\n          let responseMessage = `\r\n            ✅ Successfully created Jira issue <a href=\"${issueLink}\" target=\"_blank\">${data.key}</a>:<br>\r\n            <strong>Summary:</strong> ${data.summary || entities.summary}<br>\r\n            <strong>Project:</strong> ${data.project_key || entities.project_key}<br>\r\n            <strong>Type:</strong> ${data.issue_type || entities.issue_type || 'Task'}<br>\r\n          `;\r\n          \r\n          // Add optional fields if present\r\n          if (data.assignee || entities.assignee) {\r\n            responseMessage += `<strong>Assignee:</strong> ${data.assignee || entities.assignee}<br>`;\r\n          }\r\n          \r\n          if (entities.priority) {\r\n            responseMessage += `<strong>Priority:</strong> ${entities.priority}<br>`;\r\n          }\r\n          \r\n          if (entities.due_date) {\r\n            responseMessage += `<strong>Due Date:</strong> ${entities.due_date}<br>`;\r\n          }\r\n          \r\n          updateMessage(loadingMessageElement, responseMessage);\r\n          \r\n          // Add success to chat history\r\n          addChatHistoryItem('system', `Created Jira issue ${data.key}: ${data.summary || entities.summary}`);\r\n        } else {\r\n          // Handle unexpected success response format\r\n          updateMessage(loadingMessageElement, `✅ Jira issue created, but response format was unexpected: ${JSON.stringify(data)}`);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        // Handle error\r\n        console.error('Error creating Jira issue:', error);\r\n        \r\n        // Create retry button\r\n        const retryButton = document.createElement('button');\r\n        retryButton.textContent = 'Retry';\r\n        retryButton.className = 'retry-button';\r\n        retryButton.onclick = function() {\r\n          // Replace error message with loading\r\n          updateMessage(loadingMessageElement, 'Retrying Jira issue creation...');\r\n          // Try again\r\n          setTimeout(() => createJiraIssue(entities), 500);\r\n        };\r\n        \r\n        // Update with error message and retry button\r\n        updateMessage(\r\n          loadingMessageElement, \r\n          `❌ Error creating Jira issue: ${error.message} <div class=\"retry-container\"></div>`\r\n        );\r\n        \r\n        // Add the retry button\r\n        loadingMessageElement.querySelector('.retry-container').appendChild(retryButton);\r\n        \r\n        // Add failure to chat history\r\n        addChatHistoryItem('system', `Failed to create Jira issue: ${error.message}`);\r\n      });\r\n  });\r\n}\r\n\r\n// Load tasks from API\r\nfunction loadTasks() {\r\n  // Show loading indicator\r\n  taskList.innerHTML = '<div class=\"loading-indicator\">Loading tasks...</div>';\r\n  \r\n  // Check if authenticated\r\n  if (!isAuthenticated) {\r\n    taskList.innerHTML = '<div class=\"no-tasks\">Please log in with Jira to see your tasks.</div>';\r\n    return;\r\n  }\r\n  \r\n  // Fetch tasks\r\n  chrome.runtime.sendMessage({\r\n    type: 'API_REQUEST',\r\n    endpoint: '/api/jira/tasks',\r\n    method: 'GET'\r\n  }, (response) => {\r\n    if (response.success) {\r\n      displayTasks(response.data.issues || []);\r\n    } else {\r\n      taskList.innerHTML = `<div class=\"error-message\">Failed to load tasks: ${response.error}</div>`;\r\n    }\r\n  });\r\n}\r\n\r\n// Display tasks in the UI\r\nfunction displayTasks(tasks) {\r\n  if (tasks.length === 0) {\r\n    taskList.innerHTML = '<div class=\"no-tasks\">No tasks found.</div>';\r\n    return;\r\n  }\r\n  \r\n  taskList.innerHTML = '';\r\n  \r\n  tasks.forEach(task => {\r\n    const taskElement = document.createElement('div');\r\n    taskElement.className = 'task-item';\r\n    \r\n    // Get key fields\r\n    const key = task.key;\r\n    const summary = task.fields?.summary || 'No summary';\r\n    const status = task.fields?.status?.name || 'Unknown';\r\n    const issuetype = task.fields?.issuetype?.name || 'Task';\r\n    const priority = task.fields?.priority?.name || 'Normal';\r\n    \r\n    // Format due date if available\r\n    let dueDate = 'No due date';\r\n    if (task.fields?.duedate) {\r\n      const date = new Date(task.fields.duedate);\r\n      dueDate = date.toLocaleDateString();\r\n    }\r\n    \r\n    // Create task HTML\r\n    taskElement.innerHTML = `\r\n      <div class=\"task-header\">\r\n        <span class=\"task-key\">${key}</span>\r\n        <span class=\"task-status status-${status.toLowerCase().replace(/\\s+/g, '-')}\">${status}</span>\r\n      </div>\r\n      <div class=\"task-summary\">${summary}</div>\r\n      <div class=\"task-details\">\r\n        <span class=\"task-type\">${issuetype}</span>\r\n        <span class=\"task-priority\">${priority}</span>\r\n        <span class=\"task-due-date\">${dueDate}</span>\r\n      </div>\r\n      <div class=\"task-actions\">\r\n        <button class=\"task-action-button view-button\">View</button>\r\n        <button class=\"task-action-button update-button\">Update</button>\r\n      </div>\r\n    `;\r\n    \r\n    // Add click handler for view button\r\n    taskElement.querySelector('.view-button').addEventListener('click', () => {\r\n      chrome.storage.local.get('serverUrl', (data) => {\r\n        const jiraUrl = data.serverUrl ? \r\n          data.serverUrl.replace(/\\/api$/, '') : \r\n          'https://your-domain.atlassian.net';\r\n        chrome.tabs.create({ url: `${jiraUrl}/browse/${key}` });\r\n      });\r\n    });\r\n    \r\n    // Add click handler for update button\r\n    taskElement.querySelector('.update-button').addEventListener('click', () => {\r\n      switchTab(tabChat);\r\n      userInput.value = `Update ${key} status`;\r\n      userInput.focus();\r\n    });\r\n    \r\n    taskList.appendChild(taskElement);\r\n  });\r\n}\r\n\r\n// Save settings\r\nfunction saveSettings() {\r\n  const serverUrl = serverUrlInput.value.trim();\r\n  const notificationsEnabled = notificationsToggle.checked;\r\n  \r\n  // Validate server URL\r\n  if (!serverUrl) {\r\n    alert('Please enter a valid server URL');\r\n    return;\r\n  }\r\n  \r\n  // Save settings\r\n  chrome.storage.local.set({\r\n    serverUrl,\r\n    notificationsEnabled\r\n  }, () => {\r\n    // Show success feedback\r\n    const saveButton = document.getElementById('save-settings');\r\n    saveButton.textContent = 'Saved!';\r\n    saveButton.classList.add('success');\r\n    \r\n    // Revert button text after 2 seconds\r\n    setTimeout(() => {\r\n      saveButton.textContent = 'Save Settings';\r\n      saveButton.classList.remove('success');\r\n    }, 2000);\r\n    \r\n    // Check server connection with new URL\r\n    checkServerConnection();\r\n  });\r\n}\r\n\r\n// Handle attachment button click\r\nfunction handleAttachment() {\r\n  // Check if authenticated\r\n  if (!isAuthenticated) {\r\n    addMessage('bot', 'Please log in with Jira to upload attachments.');\r\n    return;\r\n  }\r\n  \r\n  // Create file input\r\n  const fileInput = document.createElement('input');\r\n  fileInput.type = 'file';\r\n  fileInput.accept = 'image/*,application/pdf,.doc,.docx,.xls,.xlsx,.txt';\r\n  \r\n  // Trigger file selection\r\n  fileInput.click();\r\n  \r\n  // Handle file selection\r\n  fileInput.addEventListener('change', (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    \r\n    // Validate file size (max 10MB)\r\n    if (file.size > 10 * 1024 * 1024) {\r\n      addMessage('bot', 'File too large. Maximum size is 10MB.');\r\n      return;\r\n    }\r\n    \r\n    // Show file selection in UI\r\n    addMessage('user', `📎 Selected file: ${file.name}`);\r\n    \r\n    // Here you would upload the file to the server\r\n    // This requires additional implementation in the API\r\n  });\r\n}\r\n\r\n// Handle checking for reminders\r\nfunction handleCheckReminders() {\r\n  // Disable button while checking\r\n  checkRemindersButton.disabled = true;\r\n  checkRemindersButton.textContent = 'Checking...';\r\n  \r\n  // Show checking message\r\n  const loadingItem = document.createElement('div');\r\n  loadingItem.className = 'reminder-item loading';\r\n  loadingItem.innerHTML = '<div class=\"reminder-title\">Checking for reminders...</div>';\r\n  remindersList.innerHTML = '';\r\n  remindersList.appendChild(loadingItem);\r\n  \r\n  // Check authentication\r\n  if (!isAuthenticated) {\r\n    remindersList.innerHTML = '<div class=\"no-reminders\">Please log in with Jira to check reminders.</div>';\r\n    checkRemindersButton.disabled = false;\r\n    checkRemindersButton.textContent = 'Check Now';\r\n    return;\r\n  }\r\n  \r\n  // Call background script to check reminders\r\n  chrome.runtime.sendMessage({ type: 'CHECK_REMINDERS' }, (response) => {\r\n    checkRemindersButton.disabled = false;\r\n    checkRemindersButton.textContent = 'Check Now';\r\n    \r\n    if (response.success) {\r\n      const data = response.data;\r\n      \r\n      if (data.reminders && data.reminders.length > 0) {\r\n        // Show reminders\r\n        loadRecentReminders(data.reminders);\r\n      } else {\r\n        // No reminders\r\n        remindersList.innerHTML = '<div class=\"no-reminders\">No reminders found.</div>';\r\n      }\r\n    } else {\r\n      // Error\r\n      remindersList.innerHTML = `<div class=\"error-message\">Failed to check reminders: ${response.error}</div>`;\r\n    }\r\n  });\r\n}\r\n\r\n// Handle test reminder\r\nfunction handleTestReminder() {\r\n  // Show testing message\r\n  testReminderButton.disabled = true;\r\n  testReminderButton.textContent = 'Sending...';\r\n  \r\n  // Check authentication\r\n  if (!isAuthenticated) {\r\n    alert('Please log in with Jira to test reminders.');\r\n    testReminderButton.disabled = false;\r\n    testReminderButton.textContent = 'Test Notification';\r\n    return;\r\n  }\r\n  \r\n  // Create test reminder\r\n  const testMessage = `This is a test reminder created at ${new Date().toLocaleTimeString()}`;\r\n  \r\n  chrome.runtime.sendMessage({ \r\n    type: 'API_REQUEST',\r\n    endpoint: '/api/reminders/test',\r\n    method: 'POST',\r\n    data: { message: testMessage }\r\n  }, (response) => {\r\n    testReminderButton.disabled = false;\r\n    testReminderButton.textContent = 'Test Notification';\r\n    \r\n    if (response.success) {\r\n      // Show the reminder\r\n      const reminder = response.data.reminder;\r\n      \r\n      // Create notification\r\n      chrome.runtime.sendMessage({\r\n        type: 'SHOW_NOTIFICATION',\r\n        title: 'Test Reminder',\r\n        message: reminder.message,\r\n        actions: reminder.actions\r\n      });\r\n      \r\n      // Refresh reminder list\r\n      loadRecentReminders([reminder]);\r\n    } else {\r\n      alert(`Failed to create test reminder: ${response.error}`);\r\n    }\r\n  });\r\n}\r\n\r\n// Save reminder settings\r\nfunction saveReminderSettings() {\r\n  chrome.storage.local.set({\r\n    notificationsEnabled: reminderToggle.checked\r\n  }, () => {\r\n    // Update notifications toggle to match\r\n    notificationsToggle.checked = reminderToggle.checked;\r\n  });\r\n}\r\n\r\n// Load recent reminders\r\nfunction loadRecentReminders(reminders = null) {\r\n  // Clear list\r\n  remindersList.innerHTML = '';\r\n  \r\n  // If reminders provided, use them\r\n  if (reminders && reminders.length > 0) {\r\n    displayReminders(reminders);\r\n    return;\r\n  }\r\n  \r\n  // Otherwise load from storage\r\n  chrome.storage.local.get('recentReminders', (data) => {\r\n    if (data.recentReminders && data.recentReminders.length > 0) {\r\n      displayReminders(data.recentReminders);\r\n    } else {\r\n      remindersList.innerHTML = '<div class=\"no-reminders\">No recent reminders</div>';\r\n    }\r\n  });\r\n}\r\n\r\n// Display reminders in the UI\r\nfunction displayReminders(reminders) {\r\n  // Save to storage\r\n  chrome.storage.local.set({ recentReminders: reminders.slice(0, 10) });\r\n  \r\n  // Clear list\r\n  remindersList.innerHTML = '';\r\n  \r\n  // Add reminders\r\n  reminders.forEach(reminder => {\r\n    const reminderItem = document.createElement('div');\r\n    reminderItem.className = `reminder-item urgency-${reminder.urgency}`;\r\n    \r\n    // Format timestamp\r\n    const timestamp = new Date(reminder.timestamp);\r\n    const formattedTime = timestamp.toLocaleString();\r\n    \r\n    reminderItem.innerHTML = `\r\n      <div class=\"reminder-header\">\r\n        <span class=\"reminder-key\">${reminder.key}</span>\r\n        <span class=\"reminder-time\">${formattedTime}</span>\r\n      </div>\r\n      <div class=\"reminder-title\">${reminder.title}</div>\r\n      <div class=\"reminder-message\">${reminder.message}</div>\r\n      <div class=\"reminder-details\">\r\n        <span class=\"reminder-priority\">Priority: ${reminder.priority}</span>\r\n        <span class=\"reminder-status\">Status: ${reminder.status}</span>\r\n      </div>\r\n    `;\r\n    \r\n    remindersList.appendChild(reminderItem);\r\n  });\r\n}\r\n\r\n// Update an existing message element\r\nfunction updateMessage(messageElement, newText) {\r\n  if (!messageElement) {\r\n    console.error('Cannot update message: messageElement is null or undefined');\r\n    return;\r\n  }\r\n  \r\n  console.log('Updating message element:', messageElement);\r\n  console.log('New text:', newText);\r\n  \r\n  // Find the message content element\r\n  const contentElement = messageElement.querySelector('.message-content');\r\n  if (contentElement) {\r\n    contentElement.innerHTML = newText;\r\n    console.log('Message content updated successfully');\r\n  } else {\r\n    console.error('Message content element not found within messageElement');\r\n    // Fallback: create content element if it doesn't exist\r\n    const newContentElement = document.createElement('div');\r\n    newContentElement.className = 'message-content';\r\n    newContentElement.innerHTML = newText;\r\n    messageElement.appendChild(newContentElement);\r\n  }\r\n  \r\n  // Scroll to bottom\r\n  chatMessages.scrollTop = chatMessages.scrollHeight;\r\n} "],"names":["_regeneratorRuntime","r","t","e","Object","prototype","n","hasOwnProperty","o","Symbol","i","iterator","a","asyncIterator","u","toStringTag","c","defineProperty","value","enumerable","configurable","writable","h","Generator","create","Error","done","method","arg","delegate","d","f","sent","_sent","dispatchException","abrupt","s","type","Context","call","wrap","GeneratorFunction","GeneratorFunctionPrototype","l","p","getPrototypeOf","y","x","v","g","forEach","_invoke","AsyncIterator","_typeof","resolve","__await","then","TypeError","next","w","tryEntries","push","m","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","unshift","pop","values","prev","charAt","slice","stop","rval","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","_toPrimitive","toPrimitive","String","Number","chatMessages","document","getElementById","userInput","sendButton","attachButton","statusCircle","statusText","tabChat","tabTasks","tabReminders","tabSettings","tasksContent","remindersContent","settingsContent","serverUrlInput","notificationsToggle","reminderToggle","checkRemindersButton","testReminderButton","remindersList","saveSettingsButton","taskList","chatHistory","isAuthenticated","currentUser","serverSettings","DEFAULT_JIRA_PROJECT_KEY","JIRA_URL","inputSuggestions","jiraIssue","jiraBoard","activeContextType","currentJiraContext","addEventListener","console","log","loadSettings","checkServerConnection","checkAuthStatus","loadServerSettings","loadChatHistory","updateJiraContext","chrome","storage","local","get","data","firstOpen","set","addMessage","setTimeout","showSuggestions","setupEventListeners","serverUrl","notificationsEnabled","undefined","checked","runtime","sendMessage","endpoint","response","success","settings","authenticated","user","updateAuthUI","error","authGroup","createElement","id","className","innerHTML","saveGroup","querySelector","insertBefore","authStatus","authButtons","concat","email","account_id","handleLogout","handleLogin","fetch","ok","setStatus","status","classList","add","textContent","recentMessages","msg","addMessageToUI","sender","text","timestamp","handleChatResponse","typingIndicator","updateMessage","actions","Array","isArray","handleActions","Date","toISOString","messageDiv","time","formattedTime","getHours","toString","padStart","getMinutes","appendChild","scrollTop","scrollHeight","getCurrentTabInfo","tabInfo","issueKey","placeholder","isJiraPage","existingSuggestions","remove","contains","loginButton","onclick","switchTab","loginBtn","focus","suggestionsDiv","parentNode","suggestions","suggestion","button","key","shiftKey","preventDefault","smartSuggestions","handleAttachment","handleCheckReminders","handleTestReminder","saveReminderSettings","saveSettings","input","toLowerCase","matchingSuggestions","includes","tab","style","display","loadTasks","loadRecentReminders","_sendMessage","_callee","message","isJiraCreationRequest","messageData","summaryMatch","descriptionMatch","projectKey","templateResponse","_callee$","_context","trim","test","context","match","result","userEmail","userId","requestData","history","user_id","headers","body","JSON","stringify","json","t0","_getCurrentTabInfo","_callee2","_callee2$","_context2","tabs","query","active","currentWindow","url","title","issueKeyRegex","urlMatch","titleMatch","projectKeyRegex","projectMatch","actionsDiv","action","entities","params","summary","taskData","project_key","description","issue_type","priority","assignee","due_date","labels","createJiraIssue","task_id","transition_id","transition_name","_serverSettings","loadingMessageElement","issueLink","jiraBaseUrl","responseMessage","addChatHistoryItem","retryButton","displayTasks","issues","tasks","task","_task$fields","_task$fields2","_task$fields3","_task$fields4","_task$fields5","taskElement","fields","issuetype","dueDate","duedate","date","toLocaleDateString","replace","jiraUrl","alert","saveButton","fileInput","accept","click","file","target","files","size","disabled","loadingItem","reminders","testMessage","toLocaleTimeString","reminder","displayReminders","recentReminders","reminderItem","urgency","toLocaleString","messageElement","newText","contentElement","newContentElement"],"sourceRoot":""}