{"version":3,"file":"popup.js","mappings":"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","sources":["webpack://jira-action-items-chatbot/./popup/popup.js"],"sourcesContent":["/**\r\n * Popup script for the Jira Action Items Chatbot extension\r\n * Handles the popup UI and communication with the background script\r\n */\r\n\r\n// DOM Elements\r\nconst chatMessages = document.getElementById('chat-messages');\r\nconst userInput = document.getElementById('user-input');\r\nconst sendButton = document.getElementById('send-button');\r\nconst attachButton = document.getElementById('attach-button');\r\nconst statusCircle = document.getElementById('status-circle');\r\nconst statusText = document.getElementById('status-text');\r\nconst tabChat = document.getElementById('tab-chat');\r\nconst tabTasks = document.getElementById('tab-tasks');\r\nconst tabSettings = document.getElementById('tab-settings');\r\nconst tasksContent = document.getElementById('tasks-content');\r\nconst settingsContent = document.getElementById('settings-content');\r\nconst serverUrlInput = document.getElementById('server-url');\r\nconst notificationsToggle = document.getElementById('notifications-toggle');\r\nconst saveSettingsButton = document.getElementById('save-settings');\r\nconst taskList = document.getElementById('task-list');\r\n\r\n// Chat history\r\nlet chatHistory = [];\r\n\r\n// Auth state\r\nlet isAuthenticated = false;\r\nlet currentUser = null;\r\n\r\n// Input suggestions based on context\r\nconst inputSuggestions = {\r\n  default: [\r\n    \"Create a task for me to review the documentation by Friday\",\r\n    \"List my open tasks with high priority\",\r\n    \"Remind me to follow up with the team tomorrow at 9 AM\",\r\n    \"Schedule a meeting for next week\",\r\n    \"Upload evidence for task PROJ-123\"\r\n  ],\r\n  jiraIssue: [\r\n    \"Add a comment to this issue\",\r\n    \"Change status to 'In Progress'\",\r\n    \"Add me as a watcher\",\r\n    \"Set due date to next Friday\",\r\n    \"Assign this to John\"\r\n  ],\r\n  jiraBoard: [\r\n    \"Show tasks assigned to me\",\r\n    \"Create a new epic for the Q3 deliverables\",\r\n    \"List blocked tasks in this project\",\r\n    \"Find tasks without assignees\",\r\n    \"Show tasks due this week\"\r\n  ]\r\n};\r\n\r\n// Active context type\r\nlet activeContextType = 'default';\r\nlet currentJiraContext = {};\r\n\r\n// Initialize the popup\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  // Load settings from storage\r\n  loadSettings();\r\n  \r\n  // Check server connection\r\n  checkServerConnection();\r\n  \r\n  // Check authentication status\r\n  checkAuthStatus();\r\n  \r\n  // Load chat history\r\n  loadChatHistory();\r\n  \r\n  // Get current context and update suggestions\r\n  updateJiraContext();\r\n  \r\n  // Add welcome message if this is first time\r\n  chrome.storage.local.get('firstOpen', (data) => {\r\n    if (data.firstOpen !== false) {\r\n      // First time opening the extension\r\n      chrome.storage.local.set({ firstOpen: false });\r\n      addMessage('bot', 'Welcome to Jira Action Items Chatbot! How can I help you today?');\r\n      \r\n      // Show sample commands\r\n      setTimeout(() => {\r\n        addMessage('bot', 'You can ask me to do things like:<br>' +\r\n          '• Create tasks in Jira<br>' +\r\n          '• Set reminders for due dates<br>' +\r\n          '• Update task status<br>' +\r\n          '• Find tasks assigned to you<br>' +\r\n          '<br>Try typing a command or click a suggestion below.');\r\n        \r\n        // Show initial suggestions\r\n        showSuggestions();\r\n      }, 1000);\r\n    }\r\n  });\r\n\r\n  // Set up event listeners\r\n  setupEventListeners();\r\n});\r\n\r\n// Load settings from storage\r\nfunction loadSettings() {\r\n  chrome.storage.local.get(['serverUrl', 'notificationsEnabled', 'isAuthenticated'], (data) => {\r\n    if (data.serverUrl) {\r\n      serverUrlInput.value = data.serverUrl;\r\n    }\r\n    \r\n    if (data.notificationsEnabled !== undefined) {\r\n      notificationsToggle.checked = data.notificationsEnabled;\r\n    }\r\n    \r\n    isAuthenticated = data.isAuthenticated || false;\r\n  });\r\n}\r\n\r\n// Check authentication status\r\nfunction checkAuthStatus() {\r\n  chrome.runtime.sendMessage({ type: 'AUTH_STATUS' }, (response) => {\r\n    if (response.success) {\r\n      isAuthenticated = response.data.authenticated;\r\n      currentUser = response.data.user;\r\n      updateAuthUI();\r\n    } else {\r\n      console.error('Failed to check authentication status:', response.error);\r\n      isAuthenticated = false;\r\n      updateAuthUI();\r\n    }\r\n  });\r\n}\r\n\r\n// Update UI based on authentication status\r\nfunction updateAuthUI() {\r\n  // Add Auth UI to settings tab if it doesn't exist\r\n  if (!document.getElementById('auth-settings')) {\r\n    const authGroup = document.createElement('div');\r\n    authGroup.id = 'auth-settings';\r\n    authGroup.className = 'settings-group auth-settings';\r\n    authGroup.innerHTML = `\r\n      <label>Authentication</label>\r\n      <div id=\"auth-status\" class=\"auth-status\"></div>\r\n      <div id=\"auth-buttons\" class=\"auth-buttons\"></div>\r\n    `;\r\n    \r\n    // Insert before save button\r\n    const saveGroup = document.querySelector('.settings-group:last-child');\r\n    settingsContent.insertBefore(authGroup, saveGroup);\r\n  }\r\n  \r\n  // Update auth status display\r\n  const authStatus = document.getElementById('auth-status');\r\n  const authButtons = document.getElementById('auth-buttons');\r\n  \r\n  if (isAuthenticated && currentUser) {\r\n    authStatus.innerHTML = `\r\n      <div class=\"user-info\">\r\n        <span class=\"status-circle connected\"></span>\r\n        <span>Logged in as: <strong>${currentUser.name || currentUser.email || currentUser.account_id}</strong></span>\r\n      </div>\r\n    `;\r\n    \r\n    authButtons.innerHTML = `\r\n      <button id=\"logout-button\" class=\"secondary-button\">Log Out</button>\r\n    `;\r\n    \r\n    // Add logout event listener\r\n    document.getElementById('logout-button').addEventListener('click', handleLogout);\r\n  } else {\r\n    authStatus.innerHTML = `\r\n      <div class=\"user-info\">\r\n        <span class=\"status-circle disconnected\"></span>\r\n        <span>Not logged in</span>\r\n      </div>\r\n    `;\r\n    \r\n    authButtons.innerHTML = `\r\n      <button id=\"login-button\" class=\"primary-button\">Log In with Jira</button>\r\n    `;\r\n    \r\n    // Add login event listener\r\n    document.getElementById('login-button').addEventListener('click', handleLogin);\r\n  }\r\n}\r\n\r\n// Handle login button click\r\nfunction handleLogin() {\r\n  chrome.runtime.sendMessage({ type: 'AUTH_LOGIN' }, (response) => {\r\n    if (!response.success) {\r\n      console.error('Failed to initiate login:', response.error);\r\n      // Show error in UI\r\n      addMessage('bot', 'Failed to log in. Please try again later.');\r\n    }\r\n  });\r\n}\r\n\r\n// Handle logout button click\r\nfunction handleLogout() {\r\n  chrome.runtime.sendMessage({ type: 'AUTH_LOGOUT' }, (response) => {\r\n    if (response.success) {\r\n      isAuthenticated = false;\r\n      currentUser = null;\r\n      updateAuthUI();\r\n      // Show logout message\r\n      addMessage('bot', 'You have been logged out successfully.');\r\n    } else {\r\n      console.error('Failed to logout:', response.error);\r\n      // Show error in UI\r\n      addMessage('bot', 'Failed to log out. Please try again later.');\r\n    }\r\n  });\r\n}\r\n\r\n// Check if server is available\r\nfunction checkServerConnection() {\r\n  chrome.storage.local.get('serverUrl', (data) => {\r\n    const serverUrl = data.serverUrl || 'http://localhost:8000';\r\n    \r\n    fetch(`${serverUrl}/health`, { method: 'GET' })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          setStatus('connected');\r\n        } else {\r\n          setStatus('error');\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setStatus('disconnected');\r\n      });\r\n  });\r\n}\r\n\r\n// Set connection status display\r\nfunction setStatus(status) {\r\n  statusCircle.className = 'status-circle';\r\n  \r\n  switch (status) {\r\n    case 'connected':\r\n      statusCircle.classList.add('connected');\r\n      statusText.textContent = 'Connected';\r\n      break;\r\n    case 'disconnected':\r\n      statusCircle.classList.add('disconnected');\r\n      statusText.textContent = 'Disconnected';\r\n      break;\r\n    case 'error':\r\n      statusCircle.classList.add('error');\r\n      statusText.textContent = 'Error';\r\n      break;\r\n    default:\r\n      statusCircle.classList.add('connecting');\r\n      statusText.textContent = 'Connecting...';\r\n  }\r\n}\r\n\r\n// Load chat history from storage\r\nfunction loadChatHistory() {\r\n  chrome.storage.local.get('chatHistory', (data) => {\r\n    if (data.chatHistory && data.chatHistory.length > 0) {\r\n      chatHistory = data.chatHistory;\r\n      \r\n      // Display last 10 messages\r\n      const recentMessages = chatHistory.slice(-10);\r\n      recentMessages.forEach(msg => {\r\n        addMessageToUI(msg.sender, msg.text, msg.timestamp);\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\n// Add chat message to history and UI\r\nfunction addMessage(sender, text) {\r\n  const timestamp = new Date().toISOString();\r\n  \r\n  // Add to chat history\r\n  chatHistory.push({ sender, text, timestamp });\r\n  \r\n  // Save to storage (limited to last 50 messages to save space)\r\n  if (chatHistory.length > 50) {\r\n    chatHistory = chatHistory.slice(-50);\r\n  }\r\n  chrome.storage.local.set({ chatHistory });\r\n  \r\n  // Add to UI\r\n  addMessageToUI(sender, text, timestamp);\r\n  \r\n  // If bot message, show suggestions after a brief delay\r\n  if (sender === 'bot') {\r\n    setTimeout(() => {\r\n      showSuggestions();\r\n    }, 500);\r\n  }\r\n}\r\n\r\n// Add message to UI\r\nfunction addMessageToUI(sender, text, timestamp) {\r\n  const messageDiv = document.createElement('div');\r\n  messageDiv.className = `message ${sender}-message`;\r\n  \r\n  const time = new Date(timestamp);\r\n  const formattedTime = `${time.getHours().toString().padStart(2, '0')}:${time.getMinutes().toString().padStart(2, '0')}`;\r\n  \r\n  messageDiv.innerHTML = `\r\n    <div class=\"message-content\">${text}</div>\r\n    <div class=\"message-time\">${formattedTime}</div>\r\n  `;\r\n  \r\n  chatMessages.appendChild(messageDiv);\r\n  \r\n  // Scroll to bottom\r\n  chatMessages.scrollTop = chatMessages.scrollHeight;\r\n}\r\n\r\n// Update Jira context and suggestions based on current tab\r\nfunction updateJiraContext() {\r\n  getCurrentTabInfo().then(tabInfo => {\r\n    currentJiraContext = tabInfo;\r\n    \r\n    // Determine context type\r\n    if (tabInfo.issueKey) {\r\n      activeContextType = 'jiraIssue';\r\n      userInput.placeholder = `Ask about ${tabInfo.issueKey}...`;\r\n    } else if (tabInfo.isJiraPage) {\r\n      activeContextType = 'jiraBoard';\r\n      userInput.placeholder = 'Ask about Jira board or project...';\r\n    } else {\r\n      activeContextType = 'default';\r\n      userInput.placeholder = 'Type your message here... (e.g., \"Create a task for John to review docs by Monday\")';\r\n    }\r\n    \r\n    // Update suggestions\r\n    showSuggestions();\r\n  });\r\n}\r\n\r\n// Show context-aware suggestions\r\nfunction showSuggestions() {\r\n  // Remove existing suggestions\r\n  const existingSuggestions = document.getElementById('chat-suggestions');\r\n  if (existingSuggestions) {\r\n    existingSuggestions.remove();\r\n  }\r\n  \r\n  // If not authenticated and not in settings tab, show login suggestion\r\n  if (!isAuthenticated && !document.getElementById('tab-settings').classList.contains('active')) {\r\n    const loginButton = document.createElement('button');\r\n    loginButton.className = 'suggestion-button login-suggestion';\r\n    loginButton.textContent = 'Log in with Jira to get started';\r\n    loginButton.onclick = () => {\r\n      switchTab(tabSettings);\r\n      setTimeout(() => {\r\n        const loginBtn = document.getElementById('login-button');\r\n        if (loginBtn) loginBtn.focus();\r\n      }, 100);\r\n    };\r\n    \r\n    suggestionsDiv.appendChild(loginButton);\r\n    chatMessages.parentNode.insertBefore(suggestionsDiv, document.querySelector('.input-container'));\r\n    return;\r\n  }\r\n  \r\n  // Get relevant suggestions\r\n  const suggestions = inputSuggestions[activeContextType] || inputSuggestions.default;\r\n  \r\n  // Create buttons for each suggestion\r\n  suggestions.slice(0, 3).forEach(suggestion => {\r\n    const button = document.createElement('button');\r\n    button.className = 'suggestion-button';\r\n    button.textContent = suggestion;\r\n    button.onclick = () => {\r\n      userInput.value = suggestion;\r\n      sendMessage();\r\n    };\r\n    \r\n    suggestionsDiv.appendChild(button);\r\n  });\r\n  \r\n  // Append suggestions to UI\r\n  if (suggestions.length > 0) {\r\n    chatMessages.parentNode.insertBefore(suggestionsDiv, document.querySelector('.input-container'));\r\n  }\r\n}\r\n\r\n// Set up event listeners\r\nfunction setupEventListeners() {\r\n  // Send button\r\n  sendButton.addEventListener('click', sendMessage);\r\n  \r\n  // User input\r\n  userInput.addEventListener('keydown', (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      sendMessage();\r\n    }\r\n  });\r\n  \r\n  // User input for suggestions\r\n  userInput.addEventListener('input', smartSuggestions);\r\n  \r\n  // Attach button\r\n  attachButton.addEventListener('click', handleAttachment);\r\n  \r\n  // Tab buttons\r\n  tabChat.addEventListener('click', () => switchTab(tabChat));\r\n  tabTasks.addEventListener('click', () => switchTab(tabTasks));\r\n  tabSettings.addEventListener('click', () => switchTab(tabSettings));\r\n  \r\n  // Save settings button\r\n  saveSettingsButton.addEventListener('click', saveSettings);\r\n}\r\n\r\n// Show smarter suggestions based on partial typing\r\nfunction smartSuggestions() {\r\n  const input = userInput.value.toLowerCase();\r\n  if (input.length < 3) return;\r\n  \r\n  // Get relevant suggestions\r\n  const suggestions = inputSuggestions[activeContextType] || inputSuggestions.default;\r\n  \r\n  // Filter suggestions that partially match input\r\n  const matchingSuggestions = suggestions.filter(\r\n    suggestion => suggestion.toLowerCase().includes(input)\r\n  );\r\n  \r\n  // Show up to 3 matching suggestions\r\n  if (matchingSuggestions.length > 0) {\r\n    // Remove existing suggestions\r\n    const existingSuggestions = document.getElementById('chat-suggestions');\r\n    if (existingSuggestions) {\r\n      existingSuggestions.remove();\r\n    }\r\n    \r\n    // Create suggestions container\r\n    const suggestionsDiv = document.createElement('div');\r\n    suggestionsDiv.id = 'chat-suggestions';\r\n    suggestionsDiv.className = 'chat-suggestions';\r\n    \r\n    // Create buttons for each suggestion\r\n    matchingSuggestions.slice(0, 3).forEach(suggestion => {\r\n      const button = document.createElement('button');\r\n      button.className = 'suggestion-button';\r\n      button.textContent = suggestion;\r\n      button.onclick = () => {\r\n        userInput.value = suggestion;\r\n        sendMessage();\r\n      };\r\n      \r\n      suggestionsDiv.appendChild(button);\r\n    });\r\n    \r\n    // Append suggestions to UI\r\n    chatMessages.parentNode.insertBefore(suggestionsDiv, document.querySelector('.input-container'));\r\n  }\r\n}\r\n\r\n// Switch between tabs\r\nfunction switchTab(tab) {\r\n  // Remove active class from all tabs\r\n  [tabChat, tabTasks, tabSettings].forEach(t => t.classList.remove('active'));\r\n  \r\n  // Add active class to selected tab\r\n  tab.classList.add('active');\r\n  \r\n  // Hide all content\r\n  chatMessages.parentNode.style.display = 'none';\r\n  tasksContent.style.display = 'none';\r\n  settingsContent.style.display = 'none';\r\n  \r\n  // Show content based on selected tab\r\n  if (tab === tabChat) {\r\n    chatMessages.parentNode.style.display = 'flex';\r\n    showSuggestions();\r\n  } else if (tab === tabTasks) {\r\n    tasksContent.style.display = 'block';\r\n    loadTasks();\r\n  } else if (tab === tabSettings) {\r\n    settingsContent.style.display = 'block';\r\n    updateAuthUI();\r\n  }\r\n}\r\n\r\n// Send message to API\r\nasync function sendMessage() {\r\n  const message = userInput.value.trim();\r\n  if (!message) return;\r\n  \r\n  // Clear input\r\n  userInput.value = '';\r\n  \r\n  // Remove suggestions\r\n  const existingSuggestions = document.getElementById('chat-suggestions');\r\n  if (existingSuggestions) {\r\n    existingSuggestions.remove();\r\n  }\r\n  \r\n  // Add user message to UI\r\n  addMessage('user', message);\r\n  \r\n  // Add typing indicator\r\n  const typingIndicator = document.createElement('div');\r\n  typingIndicator.className = 'message bot-message typing-indicator';\r\n  typingIndicator.innerHTML = '<div class=\"dots\"><span>.</span><span>.</span><span>.</span></div>';\r\n  chatMessages.appendChild(typingIndicator);\r\n  chatMessages.scrollTop = chatMessages.scrollHeight;\r\n  \r\n  // Check if authenticated\r\n  if (!isAuthenticated) {\r\n    // Remove typing indicator\r\n    typingIndicator.remove();\r\n    \r\n    // Add response about authentication\r\n    addMessage('bot', 'Please log in with Jira to use the chatbot. Go to the Settings tab to log in.');\r\n    return;\r\n  }\r\n  \r\n  try {\r\n    // Prepare message with context\r\n    const messageData = {\r\n      text: message,\r\n      context: currentJiraContext\r\n    };\r\n    \r\n    // Send to API\r\n    chrome.runtime.sendMessage({\r\n      type: 'API_REQUEST',\r\n      endpoint: '/api/chat',\r\n      method: 'POST',\r\n      data: messageData\r\n    }, (response) => {\r\n      // Remove typing indicator\r\n      typingIndicator.remove();\r\n      \r\n      if (response.success) {\r\n        // Add bot response to UI\r\n        addMessage('bot', response.data.response);\r\n        \r\n        // Handle actions if any\r\n        if (response.data.actions) {\r\n          handleActions(response.data.actions);\r\n        }\r\n      } else {\r\n        // Add error message to UI\r\n        addMessage('bot', `Sorry, I couldn't process your request. ${response.error}`);\r\n        \r\n        // If unauthorized, update auth status\r\n        if (response.error.includes('401') || response.error.includes('unauthorized')) {\r\n          checkAuthStatus();\r\n        }\r\n      }\r\n    });\r\n  } catch (error) {\r\n    // Remove typing indicator\r\n    typingIndicator.remove();\r\n    \r\n    // Add error message to UI\r\n    addMessage('bot', `Sorry, something went wrong. ${error.message}`);\r\n    console.error('Error sending message:', error);\r\n  }\r\n}\r\n\r\n// Get info about current tab\r\nasync function getCurrentTabInfo() {\r\n  return new Promise((resolve) => {\r\n    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\r\n      if (tabs.length === 0) {\r\n        resolve({ isJiraPage: false });\r\n        return;\r\n      }\r\n      \r\n      const url = tabs[0].url;\r\n      const title = tabs[0].title;\r\n      \r\n      // Check if this is a Jira page\r\n      const isJiraPage = url.includes('atlassian.net') || url.includes('jira');\r\n      \r\n      // Extract issue key if present in URL or title\r\n      const issueKeyRegex = /\\b([A-Z]+-[0-9]+)\\b/;\r\n      const urlMatch = url.match(issueKeyRegex);\r\n      const titleMatch = title.match(issueKeyRegex);\r\n      const issueKey = urlMatch ? urlMatch[1] : (titleMatch ? titleMatch[1] : null);\r\n      \r\n      // Extract project key if found\r\n      const projectKeyRegex = /projects\\/([A-Z]+)/;\r\n      const projectMatch = url.match(projectKeyRegex);\r\n      const projectKey = projectMatch ? projectMatch[1] : null;\r\n      \r\n      resolve({\r\n        isJiraPage,\r\n        issueKey,\r\n        projectKey,\r\n        url,\r\n        title\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\n// Handle suggested actions\r\nfunction handleActions(actions) {\r\n  // Remove existing actions\r\n  const existingActions = document.getElementById('suggested-actions');\r\n  if (existingActions) {\r\n    existingActions.remove();\r\n  }\r\n  \r\n  // Create actions container\r\n  const actionsDiv = document.createElement('div');\r\n  actionsDiv.id = 'suggested-actions';\r\n  actionsDiv.className = 'suggested-actions';\r\n  \r\n  // Add heading\r\n  const heading = document.createElement('div');\r\n  heading.className = 'actions-heading';\r\n  heading.textContent = 'Suggested Actions:';\r\n  actionsDiv.appendChild(heading);\r\n  \r\n  // Create buttons for each action\r\n  actions.forEach(action => {\r\n    const button = document.createElement('button');\r\n    button.className = 'action-button';\r\n    button.textContent = action.text;\r\n    \r\n    if (action.url) {\r\n      // Open URL action\r\n      button.onclick = () => {\r\n        chrome.tabs.create({ url: action.url });\r\n      };\r\n    } else if (action.action) {\r\n      // Custom action\r\n      button.onclick = () => {\r\n        // Handle different action types\r\n        // ...\r\n      };\r\n    }\r\n    \r\n    actionsDiv.appendChild(button);\r\n  });\r\n  \r\n  // Append actions to UI\r\n  chatMessages.appendChild(actionsDiv);\r\n  \r\n  // Scroll to bottom\r\n  chatMessages.scrollTop = chatMessages.scrollHeight;\r\n}\r\n\r\n// Load tasks from API\r\nfunction loadTasks() {\r\n  // Show loading indicator\r\n  taskList.innerHTML = '<div class=\"loading-indicator\">Loading tasks...</div>';\r\n  \r\n  // Check if authenticated\r\n  if (!isAuthenticated) {\r\n    taskList.innerHTML = '<div class=\"no-tasks\">Please log in with Jira to see your tasks.</div>';\r\n    return;\r\n  }\r\n  \r\n  // Fetch tasks\r\n  chrome.runtime.sendMessage({\r\n    type: 'API_REQUEST',\r\n    endpoint: '/api/jira/tasks',\r\n    method: 'GET'\r\n  }, (response) => {\r\n    if (response.success) {\r\n      displayTasks(response.data.issues || []);\r\n    } else {\r\n      taskList.innerHTML = `<div class=\"error-message\">Failed to load tasks: ${response.error}</div>`;\r\n    }\r\n  });\r\n}\r\n\r\n// Display tasks in the UI\r\nfunction displayTasks(tasks) {\r\n  if (tasks.length === 0) {\r\n    taskList.innerHTML = '<div class=\"no-tasks\">No tasks found.</div>';\r\n    return;\r\n  }\r\n  \r\n  taskList.innerHTML = '';\r\n  \r\n  tasks.forEach(task => {\r\n    const taskElement = document.createElement('div');\r\n    taskElement.className = 'task-item';\r\n    \r\n    // Get key fields\r\n    const key = task.key;\r\n    const summary = task.fields?.summary || 'No summary';\r\n    const status = task.fields?.status?.name || 'Unknown';\r\n    const issuetype = task.fields?.issuetype?.name || 'Task';\r\n    const priority = task.fields?.priority?.name || 'Normal';\r\n    \r\n    // Format due date if available\r\n    let dueDate = 'No due date';\r\n    if (task.fields?.duedate) {\r\n      const date = new Date(task.fields.duedate);\r\n      dueDate = date.toLocaleDateString();\r\n    }\r\n    \r\n    // Create task HTML\r\n    taskElement.innerHTML = `\r\n      <div class=\"task-header\">\r\n        <span class=\"task-key\">${key}</span>\r\n        <span class=\"task-status status-${status.toLowerCase().replace(/\\s+/g, '-')}\">${status}</span>\r\n      </div>\r\n      <div class=\"task-summary\">${summary}</div>\r\n      <div class=\"task-details\">\r\n        <span class=\"task-type\">${issuetype}</span>\r\n        <span class=\"task-priority\">${priority}</span>\r\n        <span class=\"task-due-date\">${dueDate}</span>\r\n      </div>\r\n      <div class=\"task-actions\">\r\n        <button class=\"task-action-button view-button\">View</button>\r\n        <button class=\"task-action-button update-button\">Update</button>\r\n      </div>\r\n    `;\r\n    \r\n    // Add click handler for view button\r\n    taskElement.querySelector('.view-button').addEventListener('click', () => {\r\n      chrome.storage.local.get('serverUrl', (data) => {\r\n        const jiraUrl = data.serverUrl ? \r\n          data.serverUrl.replace(/\\/api$/, '') : \r\n          'https://your-domain.atlassian.net';\r\n        chrome.tabs.create({ url: `${jiraUrl}/browse/${key}` });\r\n      });\r\n    });\r\n    \r\n    // Add click handler for update button\r\n    taskElement.querySelector('.update-button').addEventListener('click', () => {\r\n      switchTab(tabChat);\r\n      userInput.value = `Update ${key} status`;\r\n      userInput.focus();\r\n    });\r\n    \r\n    taskList.appendChild(taskElement);\r\n  });\r\n}\r\n\r\n// Save settings\r\nfunction saveSettings() {\r\n  const serverUrl = serverUrlInput.value.trim();\r\n  const notificationsEnabled = notificationsToggle.checked;\r\n  \r\n  // Validate server URL\r\n  if (!serverUrl) {\r\n    alert('Please enter a valid server URL');\r\n    return;\r\n  }\r\n  \r\n  // Save settings\r\n  chrome.storage.local.set({\r\n    serverUrl,\r\n    notificationsEnabled\r\n  }, () => {\r\n    // Show success feedback\r\n    const saveButton = document.getElementById('save-settings');\r\n    saveButton.textContent = 'Saved!';\r\n    saveButton.classList.add('success');\r\n    \r\n    // Revert button text after 2 seconds\r\n    setTimeout(() => {\r\n      saveButton.textContent = 'Save Settings';\r\n      saveButton.classList.remove('success');\r\n    }, 2000);\r\n    \r\n    // Check server connection with new URL\r\n    checkServerConnection();\r\n  });\r\n}\r\n\r\n// Handle attachment button click\r\nfunction handleAttachment() {\r\n  // Check if authenticated\r\n  if (!isAuthenticated) {\r\n    addMessage('bot', 'Please log in with Jira to upload attachments.');\r\n    return;\r\n  }\r\n  \r\n  // Create file input\r\n  const fileInput = document.createElement('input');\r\n  fileInput.type = 'file';\r\n  fileInput.accept = 'image/*,application/pdf,.doc,.docx,.xls,.xlsx,.txt';\r\n  \r\n  // Trigger file selection\r\n  fileInput.click();\r\n  \r\n  // Handle file selection\r\n  fileInput.addEventListener('change', (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    \r\n    // Validate file size (max 10MB)\r\n    if (file.size > 10 * 1024 * 1024) {\r\n      addMessage('bot', 'File too large. Maximum size is 10MB.');\r\n      return;\r\n    }\r\n    \r\n    // Show file selection in UI\r\n    addMessage('user', `📎 Selected file: ${file.name}`);\r\n    \r\n    // Here you would upload the file to the server\r\n    // This requires additional implementation in the API\r\n  });\r\n} "],"names":["_regeneratorRuntime","r","t","e","Object","prototype","n","hasOwnProperty","o","Symbol","i","iterator","a","asyncIterator","u","toStringTag","c","defineProperty","value","enumerable","configurable","writable","h","Generator","create","Error","done","method","arg","delegate","d","f","sent","_sent","dispatchException","abrupt","s","type","Context","call","wrap","GeneratorFunction","GeneratorFunctionPrototype","l","p","getPrototypeOf","y","x","v","g","forEach","_invoke","AsyncIterator","_typeof","resolve","__await","then","TypeError","next","w","tryEntries","push","m","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","unshift","pop","values","prev","charAt","slice","stop","rval","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","chatMessages","document","getElementById","userInput","sendButton","attachButton","statusCircle","statusText","tabChat","tabTasks","tabSettings","tasksContent","settingsContent","serverUrlInput","notificationsToggle","saveSettingsButton","taskList","chatHistory","isAuthenticated","currentUser","inputSuggestions","jiraIssue","jiraBoard","activeContextType","currentJiraContext","addEventListener","loadSettings","checkServerConnection","checkAuthStatus","loadChatHistory","updateJiraContext","chrome","storage","local","get","data","firstOpen","set","addMessage","setTimeout","showSuggestions","setupEventListeners","serverUrl","notificationsEnabled","undefined","checked","runtime","sendMessage","response","success","authenticated","user","updateAuthUI","console","error","authGroup","createElement","id","className","innerHTML","saveGroup","querySelector","insertBefore","authStatus","authButtons","concat","email","account_id","handleLogout","handleLogin","fetch","ok","setStatus","status","classList","add","textContent","recentMessages","msg","addMessageToUI","sender","text","timestamp","Date","toISOString","messageDiv","time","formattedTime","getHours","toString","padStart","getMinutes","appendChild","scrollTop","scrollHeight","getCurrentTabInfo","tabInfo","issueKey","placeholder","isJiraPage","existingSuggestions","remove","contains","loginButton","onclick","switchTab","loginBtn","focus","suggestionsDiv","parentNode","suggestions","suggestion","button","key","shiftKey","preventDefault","smartSuggestions","handleAttachment","saveSettings","input","toLowerCase","matchingSuggestions","filter","includes","tab","style","display","loadTasks","_sendMessage","_callee","message","typingIndicator","messageData","_callee$","_context","trim","context","endpoint","actions","handleActions","_getCurrentTabInfo","_callee2","_callee2$","_context2","tabs","query","active","currentWindow","url","title","issueKeyRegex","urlMatch","match","titleMatch","projectKeyRegex","projectMatch","projectKey","existingActions","actionsDiv","heading","action","displayTasks","issues","tasks","task","_task$fields","_task$fields2","_task$fields3","_task$fields4","_task$fields5","taskElement","summary","fields","issuetype","priority","dueDate","duedate","date","toLocaleDateString","replace","jiraUrl","alert","saveButton","fileInput","accept","click","file","target","files","size"],"sourceRoot":""}