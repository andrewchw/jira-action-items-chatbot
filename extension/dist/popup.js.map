{"version":3,"file":"popup.js","mappings":"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","sources":["webpack://jira-action-items-chatbot/./popup/popup.js"],"sourcesContent":["/**\n * Popup script for the Jira Action Items Chatbot extension\n * Handles the popup UI and communication with the background script\n */\n\n// DOM Elements\nconst chatMessages = document.getElementById('chat-messages');\nconst userInput = document.getElementById('user-input');\nconst sendButton = document.getElementById('send-button');\nconst attachButton = document.getElementById('attach-button');\nconst statusCircle = document.getElementById('status-circle');\nconst statusText = document.getElementById('status-text');\nconst tabChat = document.getElementById('tab-chat');\nconst tabTasks = document.getElementById('tab-tasks');\nconst tabReminders = document.getElementById('tab-reminders');\nconst tabSettings = document.getElementById('tab-settings');\nconst tasksContent = document.getElementById('tasks-content');\nconst remindersContent = document.getElementById('reminders-content');\nconst settingsContent = document.getElementById('settings-content');\nconst serverUrlInput = document.getElementById('server-url');\nconst notificationsToggle = document.getElementById('notifications-toggle');\nconst reminderToggle = document.getElementById('reminder-toggle');\nconst checkRemindersButton = document.getElementById('check-reminders-button');\nconst testReminderButton = document.getElementById('test-reminder-button');\nconst remindersList = document.getElementById('reminders-list');\nconst saveSettingsButton = document.getElementById('save-settings');\nconst taskList = document.getElementById('task-list');\n\n// Chat history\nlet chatHistory = [];\n\n// Auth state\nlet isAuthenticated = false;\nlet currentUser = null;\n\n// Input suggestions based on context\nconst inputSuggestions = {\n  default: [\n    \"Create a task for me to review the documentation by Friday\",\n    \"List my open tasks with high priority\",\n    \"Remind me to follow up with the team tomorrow at 9 AM\",\n    \"Schedule a meeting for next week\",\n    \"Upload evidence for task PROJ-123\"\n  ],\n  jiraIssue: [\n    \"Add a comment to this issue\",\n    \"Change status to 'In Progress'\",\n    \"Add me as a watcher\",\n    \"Set due date to next Friday\",\n    \"Assign this to John\"\n  ],\n  jiraBoard: [\n    \"Show tasks assigned to me\",\n    \"Create a new epic for the Q3 deliverables\",\n    \"List blocked tasks in this project\",\n    \"Find tasks without assignees\",\n    \"Show tasks due this week\"\n  ]\n};\n\n// Active context type\nlet activeContextType = 'default';\nlet currentJiraContext = {};\n\n// Initialize the popup\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Load settings from storage\n  loadSettings();\n  \n  // Check server connection\n  checkServerConnection();\n  \n  // Check authentication status\n  checkAuthStatus();\n  \n  // Load chat history\n  loadChatHistory();\n  \n  // Get current context and update suggestions\n  updateJiraContext();\n  \n  // Add welcome message if this is first time\n  chrome.storage.local.get('firstOpen', (data) => {\n    if (data.firstOpen !== false) {\n      // First time opening the extension\n      chrome.storage.local.set({ firstOpen: false });\n      addMessage('bot', 'Welcome to Jira Action Items Chatbot! How can I help you today?');\n      \n      // Show sample commands\n      setTimeout(() => {\n        addMessage('bot', 'You can ask me to do things like:<br>' +\n          '• Create tasks in Jira<br>' +\n          '• Set reminders for due dates<br>' +\n          '• Update task status<br>' +\n          '• Find tasks assigned to you<br>' +\n          '<br>Try typing a command or click a suggestion below.');\n        \n        // Show initial suggestions\n        showSuggestions();\n      }, 1000);\n    }\n  });\n\n  // Set up event listeners\n  setupEventListeners();\n});\n\n// Load settings from storage\nfunction loadSettings() {\n  chrome.storage.local.get(['serverUrl', 'notificationsEnabled', 'isAuthenticated'], (data) => {\n    if (data.serverUrl) {\n      serverUrlInput.value = data.serverUrl;\n    }\n    \n    if (data.notificationsEnabled !== undefined) {\n      notificationsToggle.checked = data.notificationsEnabled;\n      reminderToggle.checked = data.notificationsEnabled;\n    }\n    \n    isAuthenticated = data.isAuthenticated || false;\n  });\n}\n\n// Check authentication status\nfunction checkAuthStatus() {\n  chrome.runtime.sendMessage({ type: 'AUTH_STATUS' }, (response) => {\n    if (response.success) {\n      isAuthenticated = response.data.authenticated;\n      currentUser = response.data.user;\n      updateAuthUI();\n    } else {\n      console.error('Failed to check authentication status:', response.error);\n      isAuthenticated = false;\n      updateAuthUI();\n    }\n  });\n}\n\n// Update UI based on authentication status\nfunction updateAuthUI() {\n  // Add Auth UI to settings tab if it doesn't exist\n  if (!document.getElementById('auth-settings')) {\n    const authGroup = document.createElement('div');\n    authGroup.id = 'auth-settings';\n    authGroup.className = 'settings-group auth-settings';\n    authGroup.innerHTML = `\n      <label>Authentication</label>\n      <div id=\"auth-status\" class=\"auth-status\"></div>\n      <div id=\"auth-buttons\" class=\"auth-buttons\"></div>\n    `;\n    \n    // Insert before save button\n    const saveGroup = document.querySelector('.settings-group:last-child');\n    settingsContent.insertBefore(authGroup, saveGroup);\n  }\n  \n  // Update auth status display\n  const authStatus = document.getElementById('auth-status');\n  const authButtons = document.getElementById('auth-buttons');\n  \n  if (isAuthenticated && currentUser) {\n    authStatus.innerHTML = `\n      <div class=\"user-info\">\n        <span class=\"status-circle connected\"></span>\n        <span>Logged in as: <strong>${currentUser.name || currentUser.email || currentUser.account_id}</strong></span>\n      </div>\n    `;\n    \n    authButtons.innerHTML = `\n      <button id=\"logout-button\" class=\"secondary-button\">Log Out</button>\n    `;\n    \n    // Add logout event listener\n    document.getElementById('logout-button').addEventListener('click', handleLogout);\n  } else {\n    authStatus.innerHTML = `\n      <div class=\"user-info\">\n        <span class=\"status-circle disconnected\"></span>\n        <span>Not logged in</span>\n      </div>\n    `;\n    \n    authButtons.innerHTML = `\n      <button id=\"login-button\" class=\"primary-button\">Log In with Jira</button>\n    `;\n    \n    // Add login event listener\n    document.getElementById('login-button').addEventListener('click', handleLogin);\n  }\n}\n\n// Handle login button click\nfunction handleLogin() {\n  chrome.runtime.sendMessage({ type: 'AUTH_LOGIN' }, (response) => {\n    if (!response.success) {\n      console.error('Failed to initiate login:', response.error);\n      // Show error in UI\n      addMessage('bot', 'Failed to log in. Please try again later.');\n    }\n  });\n}\n\n// Handle logout button click\nfunction handleLogout() {\n  chrome.runtime.sendMessage({ type: 'AUTH_LOGOUT' }, (response) => {\n    if (response.success) {\n      isAuthenticated = false;\n      currentUser = null;\n      updateAuthUI();\n      // Show logout message\n      addMessage('bot', 'You have been logged out successfully.');\n    } else {\n      console.error('Failed to logout:', response.error);\n      // Show error in UI\n      addMessage('bot', 'Failed to log out. Please try again later.');\n    }\n  });\n}\n\n// Check if server is available\nfunction checkServerConnection() {\n  chrome.storage.local.get('serverUrl', (data) => {\n    const serverUrl = data.serverUrl || 'http://localhost:8000';\n    \n    fetch(`${serverUrl}/api/health`, { method: 'GET' })\n      .then(response => {\n        if (response.ok) {\n          setStatus('connected');\n        } else {\n          setStatus('error');\n        }\n      })\n      .catch(() => {\n        setStatus('disconnected');\n      });\n  });\n}\n\n// Set connection status display\nfunction setStatus(status) {\n  statusCircle.className = 'status-circle';\n  \n  switch (status) {\n    case 'connected':\n      statusCircle.classList.add('connected');\n      statusText.textContent = 'Connected';\n      break;\n    case 'disconnected':\n      statusCircle.classList.add('disconnected');\n      statusText.textContent = 'Disconnected';\n      break;\n    case 'error':\n      statusCircle.classList.add('error');\n      statusText.textContent = 'Error';\n      break;\n    default:\n      statusCircle.classList.add('connecting');\n      statusText.textContent = 'Connecting...';\n  }\n}\n\n// Load chat history from storage\nfunction loadChatHistory() {\n  chrome.storage.local.get('chatHistory', (data) => {\n    if (data.chatHistory && data.chatHistory.length > 0) {\n      chatHistory = data.chatHistory;\n      \n      // Display last 10 messages\n      const recentMessages = chatHistory.slice(-10);\n      recentMessages.forEach(msg => {\n        addMessageToUI(msg.sender, msg.text, msg.timestamp);\n      });\n    }\n  });\n}\n\n// Add chat message to history and UI\nfunction addMessage(sender, text) {\n  const timestamp = new Date().toISOString();\n  \n  // Add to chat history\n  chatHistory.push({ sender, text, timestamp });\n  \n  // Save to storage (limited to last 50 messages to save space)\n  if (chatHistory.length > 50) {\n    chatHistory = chatHistory.slice(-50);\n  }\n  chrome.storage.local.set({ chatHistory });\n  \n  // Add to UI\n  addMessageToUI(sender, text, timestamp);\n  \n  // If bot message, show suggestions after a brief delay\n  if (sender === 'bot') {\n    setTimeout(() => {\n      showSuggestions();\n    }, 500);\n  }\n}\n\n// Add message to UI\nfunction addMessageToUI(sender, text, timestamp) {\n  const messageDiv = document.createElement('div');\n  messageDiv.className = `message ${sender}-message`;\n  \n  const time = new Date(timestamp);\n  const formattedTime = `${time.getHours().toString().padStart(2, '0')}:${time.getMinutes().toString().padStart(2, '0')}`;\n  \n  messageDiv.innerHTML = `\n    <div class=\"message-content\">${text}</div>\n    <div class=\"message-time\">${formattedTime}</div>\n  `;\n  \n  chatMessages.appendChild(messageDiv);\n  \n  // Scroll to bottom\n  chatMessages.scrollTop = chatMessages.scrollHeight;\n}\n\n// Update Jira context and suggestions based on current tab\nfunction updateJiraContext() {\n  getCurrentTabInfo().then(tabInfo => {\n    currentJiraContext = tabInfo;\n    \n    // Determine context type\n    if (tabInfo.issueKey) {\n      activeContextType = 'jiraIssue';\n      userInput.placeholder = `Ask about ${tabInfo.issueKey}...`;\n    } else if (tabInfo.isJiraPage) {\n      activeContextType = 'jiraBoard';\n      userInput.placeholder = 'Ask about Jira board or project...';\n    } else {\n      activeContextType = 'default';\n      userInput.placeholder = 'Type your message here... (e.g., \"Create a task for John to review docs by Monday\")';\n    }\n    \n    // Update suggestions\n    showSuggestions();\n  });\n}\n\n// Show context-aware suggestions\nfunction showSuggestions() {\n  // Remove existing suggestions\n  const existingSuggestions = document.getElementById('chat-suggestions');\n  if (existingSuggestions) {\n    existingSuggestions.remove();\n  }\n  \n  // If not authenticated and not in settings tab, show login suggestion\n  if (!isAuthenticated && !document.getElementById('tab-settings').classList.contains('active')) {\n    const loginButton = document.createElement('button');\n    loginButton.className = 'suggestion-button login-suggestion';\n    loginButton.textContent = 'Log in with Jira to get started';\n    loginButton.onclick = () => {\n      switchTab(tabSettings);\n      setTimeout(() => {\n        const loginBtn = document.getElementById('login-button');\n        if (loginBtn) loginBtn.focus();\n      }, 100);\n    };\n    \n    suggestionsDiv.appendChild(loginButton);\n    chatMessages.parentNode.insertBefore(suggestionsDiv, document.querySelector('.input-container'));\n    return;\n  }\n  \n  // Get relevant suggestions\n  const suggestions = inputSuggestions[activeContextType] || inputSuggestions.default;\n  \n  // Create buttons for each suggestion\n  suggestions.slice(0, 3).forEach(suggestion => {\n    const button = document.createElement('button');\n    button.className = 'suggestion-button';\n    button.textContent = suggestion;\n    button.onclick = () => {\n      userInput.value = suggestion;\n      sendMessage();\n    };\n    \n    suggestionsDiv.appendChild(button);\n  });\n  \n  // Append suggestions to UI\n  if (suggestions.length > 0) {\n    chatMessages.parentNode.insertBefore(suggestionsDiv, document.querySelector('.input-container'));\n  }\n}\n\n// Set up event listeners\nfunction setupEventListeners() {\n  // Send button\n  sendButton.addEventListener('click', sendMessage);\n  \n  // User input\n  userInput.addEventListener('keydown', (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  });\n  \n  // User input for suggestions\n  userInput.addEventListener('input', smartSuggestions);\n  \n  // Attach button\n  attachButton.addEventListener('click', handleAttachment);\n  \n  // Tab buttons\n  tabChat.addEventListener('click', () => switchTab(tabChat));\n  tabTasks.addEventListener('click', () => switchTab(tabTasks));\n  tabReminders.addEventListener('click', () => switchTab(tabReminders));\n  tabSettings.addEventListener('click', () => switchTab(tabSettings));\n  \n  // Reminder buttons\n  checkRemindersButton.addEventListener('click', handleCheckReminders);\n  testReminderButton.addEventListener('click', handleTestReminder);\n  reminderToggle.addEventListener('change', saveReminderSettings);\n  \n  // Save settings button\n  saveSettingsButton.addEventListener('click', saveSettings);\n}\n\n// Show smarter suggestions based on partial typing\nfunction smartSuggestions() {\n  const input = userInput.value.toLowerCase();\n  if (input.length < 3) return;\n  \n  // Get relevant suggestions\n  const suggestions = inputSuggestions[activeContextType] || inputSuggestions.default;\n  \n  // Filter suggestions that partially match input\n  const matchingSuggestions = suggestions.filter(\n    suggestion => suggestion.toLowerCase().includes(input)\n  );\n  \n  // Show up to 3 matching suggestions\n  if (matchingSuggestions.length > 0) {\n    // Remove existing suggestions\n    const existingSuggestions = document.getElementById('chat-suggestions');\n    if (existingSuggestions) {\n      existingSuggestions.remove();\n    }\n    \n    // Create suggestions container\n    const suggestionsDiv = document.createElement('div');\n    suggestionsDiv.id = 'chat-suggestions';\n    suggestionsDiv.className = 'chat-suggestions';\n    \n    // Create buttons for each suggestion\n    matchingSuggestions.slice(0, 3).forEach(suggestion => {\n      const button = document.createElement('button');\n      button.className = 'suggestion-button';\n      button.textContent = suggestion;\n      button.onclick = () => {\n        userInput.value = suggestion;\n        sendMessage();\n      };\n      \n      suggestionsDiv.appendChild(button);\n    });\n    \n    // Append suggestions to UI\n    chatMessages.parentNode.insertBefore(suggestionsDiv, document.querySelector('.input-container'));\n  }\n}\n\n// Switch between tabs\nfunction switchTab(tab) {\n  // Remove active class from all tabs\n  [tabChat, tabTasks, tabReminders, tabSettings].forEach(t => t.classList.remove('active'));\n  \n  // Add active class to selected tab\n  tab.classList.add('active');\n  \n  // Hide all content\n  chatMessages.parentNode.style.display = 'none';\n  tasksContent.style.display = 'none';\n  remindersContent.style.display = 'none';\n  settingsContent.style.display = 'none';\n  \n  // Show content based on selected tab\n  if (tab === tabChat) {\n    chatMessages.parentNode.style.display = 'flex';\n    showSuggestions();\n  } else if (tab === tabTasks) {\n      tasksContent.style.display = 'block';\n    loadTasks();\n  } else if (tab === tabReminders) {\n    remindersContent.style.display = 'block';\n    loadRecentReminders();\n  } else if (tab === tabSettings) {\n      settingsContent.style.display = 'block';\n    updateAuthUI();\n  }\n}\n\n// Send message to API\nasync function sendMessage() {\n  const message = userInput.value.trim();\n  if (!message) return;\n  \n  // Clear input\n  userInput.value = '';\n  \n  // Remove suggestions\n  const existingSuggestions = document.getElementById('chat-suggestions');\n  if (existingSuggestions) {\n    existingSuggestions.remove();\n  }\n  \n  // Add user message to UI\n  addMessage('user', message);\n  \n  // Add typing indicator\n  const typingIndicator = document.createElement('div');\n  typingIndicator.className = 'message bot-message typing-indicator';\n  typingIndicator.innerHTML = '<div class=\"dots\"><span>.</span><span>.</span><span>.</span></div>';\n  chatMessages.appendChild(typingIndicator);\n  chatMessages.scrollTop = chatMessages.scrollHeight;\n  \n  // Check if authenticated\n  if (!isAuthenticated) {\n    // Remove typing indicator\n    typingIndicator.remove();\n    \n    // Add response about authentication\n    addMessage('bot', 'Please log in with Jira to use the chatbot. Go to the Settings tab to log in.');\n    return;\n  }\n  \n  try {\n    // Prepare message with context\n    const messageData = {\n      text: message,\n      context: currentJiraContext\n    };\n    \n    // Send to API\n      chrome.runtime.sendMessage({\n        type: 'API_REQUEST',\n      endpoint: '/api/chat',\n        method: 'POST',\n      data: messageData\n    }, (response) => {\n        // Remove typing indicator\n      typingIndicator.remove();\n        \n      if (response.success) {\n        // Add bot response to UI\n          addMessage('bot', response.data.response);\n          \n        // Handle actions if any\n        if (response.data.actions) {\n          handleActions(response.data.actions);\n        }\n      } else {\n        // Add error message to UI\n        addMessage('bot', `Sorry, I couldn't process your request. ${response.error}`);\n        \n        // If unauthorized, update auth status\n        if (response.error.includes('401') || response.error.includes('unauthorized')) {\n          checkAuthStatus();\n        }\n      }\n    });\n  } catch (error) {\n    // Remove typing indicator\n    typingIndicator.remove();\n    \n    // Add error message to UI\n    addMessage('bot', `Sorry, something went wrong. ${error.message}`);\n    console.error('Error sending message:', error);\n  }\n}\n\n// Get info about current tab\nasync function getCurrentTabInfo() {\n  return new Promise((resolve) => {\n    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n      if (tabs.length === 0) {\n        resolve({ isJiraPage: false });\n        return;\n      }\n      \n      const url = tabs[0].url;\n      const title = tabs[0].title;\n      \n      // Check if this is a Jira page\n      const isJiraPage = url.includes('atlassian.net') || url.includes('jira');\n      \n      // Extract issue key if present in URL or title\n      const issueKeyRegex = /\\b([A-Z]+-[0-9]+)\\b/;\n      const urlMatch = url.match(issueKeyRegex);\n      const titleMatch = title.match(issueKeyRegex);\n      const issueKey = urlMatch ? urlMatch[1] : (titleMatch ? titleMatch[1] : null);\n      \n      // Extract project key if found\n      const projectKeyRegex = /projects\\/([A-Z]+)/;\n      const projectMatch = url.match(projectKeyRegex);\n      const projectKey = projectMatch ? projectMatch[1] : null;\n      \n            resolve({\n        isJiraPage,\n        issueKey,\n        projectKey,\n        url,\n        title\n      });\n    });\n  });\n}\n\n// Handle suggested actions\nfunction handleActions(actions) {\n  // Remove existing actions\n  const existingActions = document.getElementById('suggested-actions');\n  if (existingActions) {\n    existingActions.remove();\n  }\n  \n  // Create actions container\n  const actionsDiv = document.createElement('div');\n  actionsDiv.id = 'suggested-actions';\n  actionsDiv.className = 'suggested-actions';\n  \n  // Add heading\n  const heading = document.createElement('div');\n  heading.className = 'actions-heading';\n  heading.textContent = 'Suggested Actions:';\n  actionsDiv.appendChild(heading);\n  \n  // Create buttons for each action\n  actions.forEach(action => {\n    const button = document.createElement('button');\n    button.className = 'action-button';\n    button.textContent = action.text;\n    \n    if (action.url) {\n      // Open URL action\n      button.onclick = () => {\n        chrome.tabs.create({ url: action.url });\n      };\n    } else if (action.action) {\n      // Custom action\n      button.onclick = () => {\n        // Handle different action types\n        // ...\n      };\n    }\n    \n    actionsDiv.appendChild(button);\n  });\n  \n  // Append actions to UI\n  chatMessages.appendChild(actionsDiv);\n  \n  // Scroll to bottom\n  chatMessages.scrollTop = chatMessages.scrollHeight;\n}\n\n// Load tasks from API\nfunction loadTasks() {\n  // Show loading indicator\n  taskList.innerHTML = '<div class=\"loading-indicator\">Loading tasks...</div>';\n  \n  // Check if authenticated\n  if (!isAuthenticated) {\n    taskList.innerHTML = '<div class=\"no-tasks\">Please log in with Jira to see your tasks.</div>';\n    return;\n  }\n  \n  // Fetch tasks\n  chrome.runtime.sendMessage({\n    type: 'API_REQUEST',\n    endpoint: '/api/jira/tasks',\n    method: 'GET'\n  }, (response) => {\n    if (response.success) {\n      displayTasks(response.data.issues || []);\n    } else {\n      taskList.innerHTML = `<div class=\"error-message\">Failed to load tasks: ${response.error}</div>`;\n    }\n  });\n}\n\n// Display tasks in the UI\nfunction displayTasks(tasks) {\n  if (tasks.length === 0) {\n    taskList.innerHTML = '<div class=\"no-tasks\">No tasks found.</div>';\n    return;\n  }\n  \n  taskList.innerHTML = '';\n  \n  tasks.forEach(task => {\n    const taskElement = document.createElement('div');\n    taskElement.className = 'task-item';\n    \n    // Get key fields\n    const key = task.key;\n    const summary = task.fields?.summary || 'No summary';\n    const status = task.fields?.status?.name || 'Unknown';\n    const issuetype = task.fields?.issuetype?.name || 'Task';\n    const priority = task.fields?.priority?.name || 'Normal';\n    \n    // Format due date if available\n    let dueDate = 'No due date';\n    if (task.fields?.duedate) {\n      const date = new Date(task.fields.duedate);\n      dueDate = date.toLocaleDateString();\n    }\n    \n    // Create task HTML\n    taskElement.innerHTML = `\n      <div class=\"task-header\">\n        <span class=\"task-key\">${key}</span>\n        <span class=\"task-status status-${status.toLowerCase().replace(/\\s+/g, '-')}\">${status}</span>\n      </div>\n      <div class=\"task-summary\">${summary}</div>\n      <div class=\"task-details\">\n        <span class=\"task-type\">${issuetype}</span>\n        <span class=\"task-priority\">${priority}</span>\n        <span class=\"task-due-date\">${dueDate}</span>\n      </div>\n      <div class=\"task-actions\">\n        <button class=\"task-action-button view-button\">View</button>\n        <button class=\"task-action-button update-button\">Update</button>\n      </div>\n    `;\n    \n    // Add click handler for view button\n    taskElement.querySelector('.view-button').addEventListener('click', () => {\n      chrome.storage.local.get('serverUrl', (data) => {\n        const jiraUrl = data.serverUrl ? \n          data.serverUrl.replace(/\\/api$/, '') : \n          'https://your-domain.atlassian.net';\n        chrome.tabs.create({ url: `${jiraUrl}/browse/${key}` });\n      });\n    });\n    \n    // Add click handler for update button\n    taskElement.querySelector('.update-button').addEventListener('click', () => {\n      switchTab(tabChat);\n      userInput.value = `Update ${key} status`;\n      userInput.focus();\n    });\n    \n    taskList.appendChild(taskElement);\n  });\n}\n\n// Save settings\nfunction saveSettings() {\n  const serverUrl = serverUrlInput.value.trim();\n  const notificationsEnabled = notificationsToggle.checked;\n  \n  // Validate server URL\n  if (!serverUrl) {\n    alert('Please enter a valid server URL');\n    return;\n  }\n  \n  // Save settings\n  chrome.storage.local.set({\n    serverUrl,\n    notificationsEnabled\n  }, () => {\n    // Show success feedback\n    const saveButton = document.getElementById('save-settings');\n    saveButton.textContent = 'Saved!';\n    saveButton.classList.add('success');\n    \n    // Revert button text after 2 seconds\n    setTimeout(() => {\n      saveButton.textContent = 'Save Settings';\n      saveButton.classList.remove('success');\n    }, 2000);\n    \n    // Check server connection with new URL\n    checkServerConnection();\n  });\n}\n\n// Handle attachment button click\nfunction handleAttachment() {\n  // Check if authenticated\n  if (!isAuthenticated) {\n    addMessage('bot', 'Please log in with Jira to upload attachments.');\n    return;\n  }\n  \n  // Create file input\n  const fileInput = document.createElement('input');\n  fileInput.type = 'file';\n  fileInput.accept = 'image/*,application/pdf,.doc,.docx,.xls,.xlsx,.txt';\n  \n  // Trigger file selection\n  fileInput.click();\n  \n  // Handle file selection\n  fileInput.addEventListener('change', (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    \n    // Validate file size (max 10MB)\n    if (file.size > 10 * 1024 * 1024) {\n      addMessage('bot', 'File too large. Maximum size is 10MB.');\n      return;\n    }\n    \n    // Show file selection in UI\n    addMessage('user', `📎 Selected file: ${file.name}`);\n    \n    // Here you would upload the file to the server\n    // This requires additional implementation in the API\n  });\n}\n\n// Handle checking for reminders\nfunction handleCheckReminders() {\n  // Disable button while checking\n  checkRemindersButton.disabled = true;\n  checkRemindersButton.textContent = 'Checking...';\n  \n  // Show checking message\n  const loadingItem = document.createElement('div');\n  loadingItem.className = 'reminder-item loading';\n  loadingItem.innerHTML = '<div class=\"reminder-title\">Checking for reminders...</div>';\n  remindersList.innerHTML = '';\n  remindersList.appendChild(loadingItem);\n  \n  // Check authentication\n  if (!isAuthenticated) {\n    remindersList.innerHTML = '<div class=\"no-reminders\">Please log in with Jira to check reminders.</div>';\n    checkRemindersButton.disabled = false;\n    checkRemindersButton.textContent = 'Check Now';\n    return;\n  }\n  \n  // Call background script to check reminders\n  chrome.runtime.sendMessage({ type: 'CHECK_REMINDERS' }, (response) => {\n    checkRemindersButton.disabled = false;\n    checkRemindersButton.textContent = 'Check Now';\n    \n    if (response.success) {\n      const data = response.data;\n      \n      if (data.reminders && data.reminders.length > 0) {\n        // Show reminders\n        loadRecentReminders(data.reminders);\n      } else {\n        // No reminders\n        remindersList.innerHTML = '<div class=\"no-reminders\">No reminders found.</div>';\n      }\n    } else {\n      // Error\n      remindersList.innerHTML = `<div class=\"error-message\">Failed to check reminders: ${response.error}</div>`;\n    }\n  });\n}\n\n// Handle test reminder\nfunction handleTestReminder() {\n  // Show testing message\n  testReminderButton.disabled = true;\n  testReminderButton.textContent = 'Sending...';\n  \n  // Check authentication\n  if (!isAuthenticated) {\n    alert('Please log in with Jira to test reminders.');\n    testReminderButton.disabled = false;\n    testReminderButton.textContent = 'Test Notification';\n    return;\n  }\n  \n  // Create test reminder\n  const testMessage = `This is a test reminder created at ${new Date().toLocaleTimeString()}`;\n  \n  chrome.runtime.sendMessage({ \n    type: 'API_REQUEST',\n    endpoint: '/api/reminders/test',\n    method: 'POST',\n    data: { message: testMessage }\n  }, (response) => {\n    testReminderButton.disabled = false;\n    testReminderButton.textContent = 'Test Notification';\n    \n    if (response.success) {\n      // Show the reminder\n      const reminder = response.data.reminder;\n      \n      // Create notification\n      chrome.runtime.sendMessage({\n        type: 'SHOW_NOTIFICATION',\n        title: 'Test Reminder',\n        message: reminder.message,\n        actions: reminder.actions\n      });\n      \n      // Refresh reminder list\n      loadRecentReminders([reminder]);\n    } else {\n      alert(`Failed to create test reminder: ${response.error}`);\n    }\n  });\n}\n\n// Save reminder settings\nfunction saveReminderSettings() {\n  chrome.storage.local.set({\n    notificationsEnabled: reminderToggle.checked\n  }, () => {\n    // Update notifications toggle to match\n    notificationsToggle.checked = reminderToggle.checked;\n  });\n}\n\n// Load recent reminders\nfunction loadRecentReminders(reminders = null) {\n  // Clear list\n  remindersList.innerHTML = '';\n  \n  // If reminders provided, use them\n  if (reminders && reminders.length > 0) {\n    displayReminders(reminders);\n    return;\n  }\n  \n  // Otherwise load from storage\n  chrome.storage.local.get('recentReminders', (data) => {\n    if (data.recentReminders && data.recentReminders.length > 0) {\n      displayReminders(data.recentReminders);\n    } else {\n      remindersList.innerHTML = '<div class=\"no-reminders\">No recent reminders</div>';\n    }\n  });\n}\n\n// Display reminders in the UI\nfunction displayReminders(reminders) {\n  // Save to storage\n  chrome.storage.local.set({ recentReminders: reminders.slice(0, 10) });\n  \n  // Clear list\n  remindersList.innerHTML = '';\n  \n  // Add reminders\n  reminders.forEach(reminder => {\n    const reminderItem = document.createElement('div');\n    reminderItem.className = `reminder-item urgency-${reminder.urgency}`;\n    \n    // Format timestamp\n    const timestamp = new Date(reminder.timestamp);\n    const formattedTime = timestamp.toLocaleString();\n    \n    reminderItem.innerHTML = `\n      <div class=\"reminder-header\">\n        <span class=\"reminder-key\">${reminder.key}</span>\n        <span class=\"reminder-time\">${formattedTime}</span>\n      </div>\n      <div class=\"reminder-title\">${reminder.title}</div>\n      <div class=\"reminder-message\">${reminder.message}</div>\n      <div class=\"reminder-details\">\n        <span class=\"reminder-priority\">Priority: ${reminder.priority}</span>\n        <span class=\"reminder-status\">Status: ${reminder.status}</span>\n      </div>\n    `;\n    \n    remindersList.appendChild(reminderItem);\n  });\n} "],"names":["_regeneratorRuntime","r","t","e","Object","prototype","n","hasOwnProperty","o","Symbol","i","iterator","a","asyncIterator","u","toStringTag","c","defineProperty","value","enumerable","configurable","writable","h","Generator","create","Error","done","method","arg","delegate","d","f","sent","_sent","dispatchException","abrupt","s","type","Context","call","wrap","GeneratorFunction","GeneratorFunctionPrototype","l","p","getPrototypeOf","y","x","v","g","forEach","_invoke","AsyncIterator","_typeof","resolve","__await","then","TypeError","next","w","tryEntries","push","m","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","unshift","pop","values","prev","charAt","slice","stop","rval","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","chatMessages","document","getElementById","userInput","sendButton","attachButton","statusCircle","statusText","tabChat","tabTasks","tabReminders","tabSettings","tasksContent","remindersContent","settingsContent","serverUrlInput","notificationsToggle","reminderToggle","checkRemindersButton","testReminderButton","remindersList","saveSettingsButton","taskList","chatHistory","isAuthenticated","currentUser","inputSuggestions","jiraIssue","jiraBoard","activeContextType","currentJiraContext","addEventListener","loadSettings","checkServerConnection","checkAuthStatus","loadChatHistory","updateJiraContext","chrome","storage","local","get","data","firstOpen","set","addMessage","setTimeout","showSuggestions","setupEventListeners","serverUrl","notificationsEnabled","undefined","checked","runtime","sendMessage","response","success","authenticated","user","updateAuthUI","console","error","authGroup","createElement","id","className","innerHTML","saveGroup","querySelector","insertBefore","authStatus","authButtons","concat","email","account_id","handleLogout","handleLogin","fetch","ok","setStatus","status","classList","add","textContent","recentMessages","msg","addMessageToUI","sender","text","timestamp","Date","toISOString","messageDiv","time","formattedTime","getHours","toString","padStart","getMinutes","appendChild","scrollTop","scrollHeight","getCurrentTabInfo","tabInfo","issueKey","placeholder","isJiraPage","existingSuggestions","remove","contains","loginButton","onclick","switchTab","loginBtn","focus","suggestionsDiv","parentNode","suggestions","suggestion","button","key","shiftKey","preventDefault","smartSuggestions","handleAttachment","handleCheckReminders","handleTestReminder","saveReminderSettings","saveSettings","input","toLowerCase","matchingSuggestions","filter","includes","tab","style","display","loadTasks","loadRecentReminders","_sendMessage","_callee","message","typingIndicator","messageData","_callee$","_context","trim","context","endpoint","actions","handleActions","_getCurrentTabInfo","_callee2","_callee2$","_context2","tabs","query","active","currentWindow","url","title","issueKeyRegex","urlMatch","match","titleMatch","projectKeyRegex","projectMatch","projectKey","existingActions","actionsDiv","heading","action","displayTasks","issues","tasks","task","_task$fields","_task$fields2","_task$fields3","_task$fields4","_task$fields5","taskElement","summary","fields","issuetype","priority","dueDate","duedate","date","toLocaleDateString","replace","jiraUrl","alert","saveButton","fileInput","accept","click","file","target","files","size","disabled","loadingItem","reminders","testMessage","toLocaleTimeString","reminder","displayReminders","recentReminders","reminderItem","urgency","toLocaleString"],"sourceRoot":""}